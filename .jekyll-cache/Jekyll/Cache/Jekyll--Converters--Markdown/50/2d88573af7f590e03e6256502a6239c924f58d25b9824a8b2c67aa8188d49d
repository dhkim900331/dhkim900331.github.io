I"<h2 id="1-개요">1. 개요</h2>

<p>Log를 Tar 압축하여 분리/삭제 해본다.</p>

<h2 id="2-전체-script">2. 전체 Script</h2>

<p>전체 Script 부터 공개를 하면</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="rouge-code"><pre><span class="c">#!/usr/bin/bash</span>

<span class="c"># 백업하려는 로그의 원본 위치</span>
<span class="nv">LOG_HOME</span><span class="o">=</span>/sw/weblogic/14c/domains/base_domain/logs
<span class="nv">LOG_HOME_NOHUP</span><span class="o">=</span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span>/nohup
<span class="nv">LOG_HOME_GCLOG</span><span class="o">=</span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span>/gc

<span class="c"># 압축해서 보관할 위치</span>
<span class="nv">BACK_LOG_HOME</span><span class="o">=</span>/sw/weblogic/14c/domains/base_domain/backup
<span class="nv">BACK_LOG_HOME_NOHUP</span><span class="o">=</span><span class="k">${</span><span class="nv">BACK_LOG_HOME</span><span class="k">}</span>/nohup
<span class="nv">BACK_LOG_HOME_GCLOG</span><span class="o">=</span><span class="k">${</span><span class="nv">BACK_LOG_HOME</span><span class="k">}</span>/gc


<span class="c"># 압축 보관할 디렉토리 생성</span>
<span class="nb">mkdir</span> <span class="nt">-p</span> <span class="k">${</span><span class="nv">BACK_LOG_HOME_NOHUP</span><span class="k">}</span> <span class="k">${</span><span class="nv">BACK_LOG_HOME_GCLOG</span><span class="k">}</span>

<span class="c">### 수정 1일 지난 파일 검색 및 while loop로 압축</span>
<span class="c"># NOHUP</span>
find <span class="k">${</span><span class="nv">LOG_HOME_NOHUP</span><span class="k">}</span> <span class="nt">-type</span> f <span class="nt">-name</span> <span class="s2">"*out*"</span> <span class="nt">-mtime</span> +1 |
<span class="k">while </span><span class="nb">read </span>LINE
<span class="k">do</span>
	/usr/bin/tar <span class="nt">-czf</span> <span class="k">${</span><span class="nv">BACK_LOG_HOME_NOHUP</span><span class="k">}</span>/<span class="si">$(</span><span class="nb">basename</span> <span class="k">${</span><span class="nv">LINE</span><span class="k">}</span><span class="si">)</span>.tar.gz <span class="k">${</span><span class="nv">LINE</span><span class="k">}</span>
	/usr/bin/rm <span class="k">${</span><span class="nv">LINE</span><span class="k">}</span>
<span class="k">done</span>

<span class="c"># GCLOG</span>
find <span class="k">${</span><span class="nv">LOG_HOME_GCLOG</span><span class="k">}</span> <span class="nt">-type</span> f <span class="nt">-name</span> <span class="s2">"*out*"</span> <span class="nt">-mtime</span> +1 |
<span class="k">while </span><span class="nb">read </span>LINE
<span class="k">do</span>
	/usr/bin/tar <span class="nt">-czf</span> <span class="k">${</span><span class="nv">BACK_LOG_HOME_GCLOG</span><span class="k">}</span>/<span class="si">$(</span><span class="nb">basename</span> <span class="k">${</span><span class="nv">LINE</span><span class="k">}</span><span class="si">)</span>.tar.gz <span class="k">${</span><span class="nv">LINE</span><span class="k">}</span>
	/usr/bin/rm <span class="k">${</span><span class="nv">LINE</span><span class="k">}</span>
<span class="k">done</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">백업하려는 로그의 원본 위치</code> 는 원본 Log가 쌓이는 위치이다.</p>

<p>여기서는 <code class="language-plaintext highlighter-rouge">LOG_HOME</code> 아래에 <code class="language-plaintext highlighter-rouge">nohup</code> 과 <code class="language-plaintext highlighter-rouge">gc</code> 디렉토리에 많은 Log가 쌓인다고 가정한다.</p>

<p><code class="language-plaintext highlighter-rouge">압축해서 보관할 위치</code> 는 원본 Log가 압축되어 보관될 위치이다.</p>

<p>여기에서는, 각각 대응하여 보관하기 위해 <code class="language-plaintext highlighter-rouge">BACK_LOG_HOME_...</code> 가 있다.</p>

<p><code class="language-plaintext highlighter-rouge">수정 1일 지난 파일 검색 및 while loop로 압축</code> 아래에는 <code class="language-plaintext highlighter-rouge">while loop</code> Section이 두번 나타난다.</p>

<p>각각 <code class="language-plaintext highlighter-rouge">nohup</code>과 <code class="language-plaintext highlighter-rouge">gc</code> 의 하루 지난 파일(<code class="language-plaintext highlighter-rouge">-mtime +1</code>)을 찾아 <code class="language-plaintext highlighter-rouge">tar</code> 와 <code class="language-plaintext highlighter-rouge">rm</code> 명령어를 실행한다.</p>

:ET