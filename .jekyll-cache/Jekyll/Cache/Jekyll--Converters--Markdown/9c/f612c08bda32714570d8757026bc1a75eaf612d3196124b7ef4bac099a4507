I"*:<h2 id="1-개요">1. 개요</h2>

<p>예전에 <a href="PostImageSorting">PostImageSorting</a> 에서 Typora 이미지 업로드 기능을 알아보았다.</p>

<p>해당 방식은 나의 Local git directory 에 이미지를 삽입하는 방식이다.</p>

<p>혹, 다른 image cloud (like CDN) 서비스에 업로드하고</p>

<p>해당 이미지의 URL을 사용하고 싶을 때는 어떻게 해야 될까?</p>

<h2 id="2-custom-upload-image">2. Custom Upload Image</h2>

<h3 id="21-preferences">2.1 Preferences</h3>

<p>그럴때는 Custom Upload 방식을 취하면 된다.</p>

<p>해당 방식은 <a href="https://support.typora.io/Upload-Image/#custom">공식 메뉴얼</a> 을 참고하면 되며,</p>

<p><a href="https://support.typora.io/Upload-Image/#troubleshooting">트러블 슈팅</a> 란 또한 참고하면 된다.</p>

<p>우선, 다음과 같이 <code class="language-plaintext highlighter-rouge">Upload image</code> 및 <code class="language-plaintext highlighter-rouge">Custom Command</code> 를 설정한다.</p>

<p><img src="/../assets/posts/images/07-Typora/CustomUploadImageForTypora/CustomUploadImageForTypora_1.png" alt="CustomUploadImageForTypora_1" /></p>

<p><code class="language-plaintext highlighter-rouge">Custom Command</code>는 <code class="language-plaintext highlighter-rouge">C:\PROGRA~1\Git\bin\sh.exe /c/Users/Dong-Hyun.KIM/Desktop/GoodMorning/2.-Blog/uploader.sh ${filename}</code> 와 같이 <code class="language-plaintext highlighter-rouge">uploader.sh</code>을 설정한다.</p>

<p>뒤에 <code class="language-plaintext highlighter-rouge">${filename}</code>은 Typora에서 현재 Markdown 의 Filename을 매개변수로 넘겨준다.</p>

<p><strong>저장하지 않은 Untitled md 일 경우, 빈 값이 전송되므로 유의해야 한다.</strong></p>

<h3 id="22-uploadersh">2.2 uploader.sh</h3>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
</pre></td><td class="rouge-code"><pre><span class="c">#!/usr/bin/bash</span>

<span class="nv">BASEDIR</span><span class="o">=</span><span class="si">$(</span><span class="nb">dirname</span> <span class="s2">"</span><span class="nv">$0</span><span class="s2">"</span><span class="si">)</span>
<span class="nb">.</span> <span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span>/env.sh

<span class="nv">MSG_SUC</span><span class="o">=</span><span class="s1">'Upload Success:'</span>
<span class="nv">MSG_FAI</span><span class="o">=</span><span class="s1">'Upload Failed:'</span>

<span class="nv">ASSET_HOME</span><span class="o">=</span><span class="k">${</span><span class="nv">HOME</span><span class="k">}</span>/<span class="k">${</span><span class="nv">GIT</span><span class="k">}</span>/assets/posts/images

<span class="c"># Extract markdown filename without DATE Format and Extension</span>
<span class="nv">MD_REGEX_DATE</span><span class="o">=</span><span class="s1">'^[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}-'</span>
<span class="nv">MD_REGEX_EXTENSION</span><span class="o">=</span><span class="s1">'\.[mMdD]\{2\}$'</span>
<span class="nv">MD_FILENAME</span><span class="o">=</span><span class="nv">$1</span>
<span class="nv">MD_FILENAME</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="k">${</span><span class="nv">MD_FILENAME</span><span class="k">}</span> | <span class="nb">sed</span> <span class="nt">-e</span> <span class="s2">"s|</span><span class="k">${</span><span class="nv">MD_REGEX_DATE</span><span class="k">}</span><span class="s2">||g"</span><span class="si">)</span>
<span class="nv">MD_FILENAME</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="k">${</span><span class="nv">MD_FILENAME</span><span class="k">}</span> | <span class="nb">sed</span> <span class="nt">-e</span> <span class="s2">"s|</span><span class="k">${</span><span class="nv">MD_REGEX_EXTENSION</span><span class="k">}</span><span class="s2">||g"</span><span class="si">)</span>

<span class="c"># Change image filename</span>
<span class="nv">IMG_REGEX_EXTENSION</span><span class="o">=</span><span class="s1">'^.*\.'</span>
<span class="nv">IMG_FILENAME</span><span class="o">=</span><span class="nv">$2</span>
<span class="nv">IMG_EXTENSION</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="k">${</span><span class="nv">IMG_FILENAME</span><span class="k">}</span> | <span class="nb">sed</span> <span class="nt">-e</span> <span class="s2">"s|</span><span class="k">${</span><span class="nv">IMG_REGEX_EXTENSION</span><span class="k">}</span><span class="s2">||g"</span><span class="si">)</span>
<span class="nv">IMG_FILENAME</span><span class="o">=</span><span class="k">${</span><span class="nv">MD_FILENAME</span><span class="k">}</span>-<span class="si">$(</span><span class="nb">date</span> +%Y%m%d_%H%M%S<span class="si">)</span>.<span class="k">${</span><span class="nv">IMG_EXTENSION</span><span class="k">}</span>

<span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="nv">$# </span><span class="nt">-eq</span> 2 <span class="o">]</span>
<span class="k">then
	</span><span class="nb">echo</span> <span class="k">${</span><span class="nv">MSG_FAI</span><span class="k">}</span>
	<span class="nb">echo</span> <span class="s2">"argument should equal to TWO"</span>
	<span class="nb">exit</span><span class="p">;</span>
<span class="k">fi</span>



<span class="c"># mkdir</span>
/usr/bin/mkdir <span class="nt">-p</span> <span class="k">${</span><span class="nv">ASSET_HOME</span><span class="k">}</span>/<span class="k">${</span><span class="nv">MD_FILENAME</span><span class="k">}</span>
<span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="nv">$?</span> <span class="nt">-eq</span> 0 <span class="o">]</span>
<span class="k">then
	</span><span class="nb">echo</span> <span class="k">${</span><span class="nv">MSG_FAI</span><span class="k">}</span>
	<span class="nb">echo</span> <span class="s2">"failed mkdir"</span>
	<span class="nb">exit</span><span class="p">;</span>
<span class="k">fi</span>

<span class="c"># move</span>
/usr/bin/mv <span class="nv">$2</span> <span class="k">${</span><span class="nv">ASSET_HOME</span><span class="k">}</span>/<span class="k">${</span><span class="nv">MD_FILENAME</span><span class="k">}</span>/<span class="k">${</span><span class="nv">IMG_FILENAME</span><span class="k">}</span>
<span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="nv">$?</span> <span class="nt">-eq</span> 0 <span class="o">]</span>
<span class="k">then
	</span><span class="nb">echo</span> <span class="k">${</span><span class="nv">MSG_FAI</span><span class="k">}</span>
	<span class="nb">echo</span> <span class="s2">"failed move"</span>
	<span class="nb">exit</span><span class="p">;</span>
<span class="k">fi

</span><span class="nb">echo</span> <span class="k">${</span><span class="nv">MSG_SUC</span><span class="k">}</span>
<span class="c">#echo "file:///../assets/posts/images/${MD_FILENAME}/${IMG_FILENAME}"</span>
<span class="c">#echo 'https://dhkim900331.github.io/assets/posts/images/${MD_FILENAME}/${IMG_FILENAME}'</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>나는 Post (.md) 파일 안에 YAML Front Matter section 에 date 를 설정하였다.</p>

<p>기본적으로는, File name의 date가 설정되어 있어야 하겠지만</p>

<p>너무 URL이 지저분해지는 경향이 있어 변경하였다.</p>

<p>그대신 Filename에는 반드시 (내가알기로는) date format string이 있어야 하는거 같아</p>

<p><code class="language-plaintext highlighter-rouge">0000-00-01-File.md</code> 와 같은 형식으로 관리하고 있다.</p>

<p>그러다보니 아래 코드 조각으로 위 파일 형식에서 Prefix date와 Postfix extension을 제거한다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="c"># Extract markdown filename without DATE Format and Extension</span>
<span class="nv">MD_REGEX_DATE</span><span class="o">=</span><span class="s1">'^[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}-'</span>
<span class="nv">MD_REGEX_EXTENSION</span><span class="o">=</span><span class="s1">'\.[mMdD]\{2\}$'</span>
<span class="nv">MD_FILENAME</span><span class="o">=</span><span class="nv">$1</span>
<span class="nv">MD_FILENAME</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="k">${</span><span class="nv">MD_FILENAME</span><span class="k">}</span> | <span class="nb">sed</span> <span class="nt">-e</span> <span class="s2">"s|</span><span class="k">${</span><span class="nv">MD_REGEX_DATE</span><span class="k">}</span><span class="s2">||g"</span><span class="si">)</span>
<span class="nv">MD_FILENAME</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="k">${</span><span class="nv">MD_FILENAME</span><span class="k">}</span> | <span class="nb">sed</span> <span class="nt">-e</span> <span class="s2">"s|</span><span class="k">${</span><span class="nv">MD_REGEX_EXTENSION</span><span class="k">}</span><span class="s2">||g"</span><span class="si">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p>$1은 말머리에서 언급한, Typoar가 현재 수정중인 MD 파일명을 매개변수로 넘겨주는 것이다.</p>
</blockquote>

<p>Typora 에디터 내에서 Ctrl+V 로 붙여넣기하는 이미지는, 임시 디렉토리(Windows)에 저장이 된다.</p>

<p>해당 이미지의 경로를 매개변수(<code class="language-plaintext highlighter-rouge">$2</code>)로 받게 된다.</p>

<p>이미지의 파일명과 확장자를 변수로 분리한다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="c"># Change image filename</span>
<span class="nv">IMG_REGEX_EXTENSION</span><span class="o">=</span><span class="s1">'^.*\.'</span>
<span class="nv">IMG_FILENAME</span><span class="o">=</span><span class="nv">$2</span>
<span class="nv">IMG_EXTENSION</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="k">${</span><span class="nv">IMG_FILENAME</span><span class="k">}</span> | <span class="nb">sed</span> <span class="nt">-e</span> <span class="s2">"s|</span><span class="k">${</span><span class="nv">IMG_REGEX_EXTENSION</span><span class="k">}</span><span class="s2">||g"</span><span class="si">)</span>
<span class="nv">IMG_FILENAME</span><span class="o">=</span><span class="k">${</span><span class="nv">MD_FILENAME</span><span class="k">}</span>-<span class="si">$(</span><span class="nb">date</span> +%Y%m%d_%H%M%S<span class="si">)</span>.<span class="k">${</span><span class="nv">IMG_EXTENSION</span><span class="k">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>MD 파일명으로 이미지를 저장할 디렉토리를 생성하고,</p>

<p>이미지를 해당 디렉토리에 저장한다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre><span class="c"># mkdir</span>
/usr/bin/mkdir <span class="nt">-p</span> <span class="k">${</span><span class="nv">ASSET_HOME</span><span class="k">}</span>/<span class="k">${</span><span class="nv">MD_FILENAME</span><span class="k">}</span>
<span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="nv">$?</span> <span class="nt">-eq</span> 0 <span class="o">]</span>
<span class="k">then
	</span><span class="nb">echo</span> <span class="k">${</span><span class="nv">MSG_FAI</span><span class="k">}</span>
	<span class="nb">echo</span> <span class="s2">"failed mkdir"</span>
	<span class="nb">exit</span><span class="p">;</span>
<span class="k">fi</span>

<span class="c"># move</span>
/usr/bin/mv <span class="nv">$2</span> <span class="k">${</span><span class="nv">ASSET_HOME</span><span class="k">}</span>/<span class="k">${</span><span class="nv">MD_FILENAME</span><span class="k">}</span>/<span class="k">${</span><span class="nv">IMG_FILENAME</span><span class="k">}</span>
<span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="nv">$?</span> <span class="nt">-eq</span> 0 <span class="o">]</span>
<span class="k">then
	</span><span class="nb">echo</span> <span class="k">${</span><span class="nv">MSG_FAI</span><span class="k">}</span>
	<span class="nb">echo</span> <span class="s2">"failed move"</span>
	<span class="nb">exit</span><span class="p">;</span>
<span class="k">fi</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>가자 중요한 부분으로,</p>

<p>Typora는 return 값의 마지막 N 줄을 읽어들인다.</p>

<p>Ctrl+V 붙여넣기로 한번에 N 개의 이미지를 삽입하면, 그만큼 N줄을 읽어간다.</p>

<p>여기 스크립트는 1개 이미지만 대상으로 짜여져 있기 때문에, &gt; 1 은 Error 발생한다.</p>

<p>return 값의 형식으로는 <code class="language-plaintext highlighter-rouge">file://</code> 또는 <code class="language-plaintext highlighter-rouge">http(s)://</code> 에 해당되는 Protocol만 인식한다.</p>

<p>나머지는 Error가 뜬다…</p>

<p><code class="language-plaintext highlighter-rouge">file://</code> 부분을 사용하고자 해당 스크립트를 쓰는 경우는 없을 것이고,</p>

<p>img cloud 에 업로드한 후 uri 를 받아온 다음에 활용하기 좋을 것이다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nb">echo</span> <span class="k">${</span><span class="nv">MSG_SUC</span><span class="k">}</span>
<span class="c">#echo "file:///../assets/posts/images/${MD_FILENAME}/${IMG_FILENAME}"</span>
<span class="c">#echo 'https://dhkim900331.github.io/assets/posts/images/${MD_FILENAME}/${IMG_FILENAME}'</span>
</pre></td></tr></tbody></table></code></pre></div></div>

:ET