<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://dhkim900331.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://dhkim900331.github.io/" rel="alternate" type="text/html" /><updated>2024-11-12T06:38:18+00:00</updated><id>https://dhkim900331.github.io/feed.xml</id><title type="html">IT Blogger DongDong</title><subtitle>소프트웨어/솔루션/IT 엔지니어로 종사하며 얻는 모든 지식들을 공유하고자 블로그로 기록하고 있습니다. 제가 알고 있는 것을 공유하고 기록하는 행동을 통해, 많은 지식을 흡수하고 있습니다.</subtitle><author><name>DongHyun Kim</name></author><entry><title type="html">[WebLogic/WLST] How To Debug WLST</title><link href="https://dhkim900331.github.io/weblogic/How-To-Debug-WLST" rel="alternate" type="text/html" title="[WebLogic/WLST] How To Debug WLST" /><published>2024-11-12T06:33:47+00:00</published><updated>2024-11-12T06:33:47+00:00</updated><id>https://dhkim900331.github.io/weblogic/How-To-Debug-WLST</id><content type="html" xml:base="https://dhkim900331.github.io/weblogic/How-To-Debug-WLST"><![CDATA[<h2 id="1-overview">1. Overview</h2>
<p>WLST 명령문의 Debugging 방법</p>

<h2 id="2-descriptions">2. Descriptions</h2>
<p>스크립트 예시는, Domain upgrade 시 WLST debugging.
<code class="language-plaintext highlighter-rouge">WLST_PROPERTIES</code>에는 Debugging 뿐만 아니라, 다양한 옵션을 구성할 수 있다.</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="nv">ORACLE_HOME</span><span class="o">=</span>/sw/weblogic/12cR2
<span class="nv">DLOG_DIR</span><span class="o">=</span>/tmp/wlstDebug
<span class="nb">mkdir</span> <span class="k">${</span><span class="nv">DLOG_DIR</span><span class="k">}</span>

<span class="nb">export </span><span class="nv">WLST_PROPERTIES</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">WLST_PROPERTIES</span><span class="k">}</span><span class="s2"> -Dwlst.debug.init=true"</span>
<span class="nb">export </span><span class="nv">WLST_PROPERTIES</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">WLST_PROPERTIES</span><span class="k">}</span><span class="s2"> -Dwlst.offline.log.priority=debug"</span>
<span class="nb">export </span><span class="nv">WLST_PROPERTIES</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">WLST_PROPERTIES</span><span class="k">}</span><span class="s2"> -Dwlst.offline.log=</span><span class="k">${</span><span class="nv">DLOG_DIR</span><span class="k">}</span><span class="s2">/debug.log"</span>

<span class="k">${</span><span class="nv">ORACLE_HOME</span><span class="k">}</span>/oracle_common/common/bin/wlst.sh <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh">
readDomainForUpgrade('/sw/weblogic/12cR2/domains/one_domain')
updateDomain()
closeDomain()
exit()
</span><span class="no">EOF
</span></pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="3-references">3. References</h2>
<p>How To Debug WLST Jython Scripts (Doc ID 1360744.1)
Unable To Upgrade 12.1.3 To 12.2.1.4 with Error “com.oracle.cie.domain.script.jython.WLSTException: 64254: Error occurred in “Backup &amp; Initialization” phase execution” (Doc ID 2778711.1)</p>]]></content><author><name>DongHyun Kim</name></author><category term="WebLogic" /><category term="Middleware" /><category term="WebLogic" /><category term="WLST" /><category term="Debug" /><summary type="html"><![CDATA[1. Overview WLST 명령문의 Debugging 방법]]></summary></entry><entry><title type="html">[WebLogic] How To Pack or Unpack</title><link href="https://dhkim900331.github.io/weblogic/How-To-Pack-or-Unpack" rel="alternate" type="text/html" title="[WebLogic] How To Pack or Unpack" /><published>2024-11-12T06:33:47+00:00</published><updated>2024-11-12T06:33:47+00:00</updated><id>https://dhkim900331.github.io/weblogic/How-To-Pack-or-Unpack</id><content type="html" xml:base="https://dhkim900331.github.io/weblogic/How-To-Pack-or-Unpack"><![CDATA[<h2 id="1-overview">1. Overview</h2>
<p>Pack을 이용하여 Domain을 Template 화 할 수 있으며,
Unpack으로 손쉽게 Template 을 Remote machin에 설치할 수 있다.</p>

<h2 id="2-descriptions">2. Descriptions</h2>
<p>다음을 실행하여, Domain에 대한 Template을 생성한다.</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="k">${</span><span class="nv">ORACLE_HOME</span><span class="k">}</span>/oracle_common/common/bin/pack.sh <span class="se">\</span>
 <span class="nt">-domain</span><span class="o">=</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span> <span class="se">\</span>
 <span class="nt">-template</span><span class="o">=</span>/tmp/template.jar <span class="se">\</span>
 <span class="nt">-template_name</span><span class="o">=</span><span class="s2">"My Template"</span> <span class="se">\</span>
 <span class="nt">-managed</span><span class="o">=</span><span class="nb">true</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>다음을 실행하여, Template을 원하는 경로에 재구성 할 수 있다.
이때, domain 경로를 변경이 가능하며 영향 받는 모든 파일이 수정된다.</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="k">${</span><span class="nv">ORACLE_HOME</span><span class="k">}</span>/oracle_common/common/bin/unpack.sh <span class="se">\</span>
 <span class="nt">-domain</span><span class="o">=</span><span class="k">${</span><span class="nv">NEW_DOMAIN_HOME</span><span class="k">}</span> <span class="se">\</span>
 <span class="nt">-template</span><span class="o">=</span>/tmp/template.jar <span class="se">\</span>
 <span class="nt">-user_name</span><span class="o">=</span>weblogic <span class="se">\</span>
 <span class="nt">-password</span><span class="o">=</span>weblogic1
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그러나, References 에서 설명하듯 다음과 같은 파일들은 포함되지 않기 때문에
Template에 의하여 생성된 Domain을 즉시 사용 가능하지 않다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>2.1.3 Files and Directories Included in Managed Server Templates
...
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="3-references">3. References</h2>
<p>https://docs.oracle.com/middleware/1221/wls/WLDPU/commands.htm</p>]]></content><author><name>DongHyun Kim</name></author><category term="WebLogic" /><category term="Middleware" /><category term="WebLogic" /><category term="Pack" /><category term="Unpack" /><summary type="html"><![CDATA[1. Overview Pack을 이용하여 Domain을 Template 화 할 수 있으며, Unpack으로 손쉽게 Template 을 Remote machin에 설치할 수 있다.]]></summary></entry><entry><title type="html">[WebLogic/WLST] How To Upgrade a Domain</title><link href="https://dhkim900331.github.io/weblogic/How-To-Upgrade-a-Domain" rel="alternate" type="text/html" title="[WebLogic/WLST] How To Upgrade a Domain" /><published>2024-11-12T06:33:47+00:00</published><updated>2024-11-12T06:33:47+00:00</updated><id>https://dhkim900331.github.io/weblogic/How-To-Upgrade-a-Domain</id><content type="html" xml:base="https://dhkim900331.github.io/weblogic/How-To-Upgrade-a-Domain"><![CDATA[<h2 id="1-overview">1. Overview</h2>
<p>WebLogic Domain Upgrade 방법 및 사례</p>

<p><br /></p>

<h2 id="2-descriptions">2. Descriptions</h2>
<p>다음의 WLST Script를 통해 Debug log 수집과 더불어 Upgrade가 완료된다.</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="nb">export </span><span class="nv">ORACLE_HOME</span><span class="o">=</span>/sw/weblogic/12cR2
<span class="nb">export </span><span class="nv">DLOG_DIR</span><span class="o">=</span>/tmp/wlstDebug
<span class="nb">mkdir</span> <span class="k">${</span><span class="nv">DLOG_DIR</span><span class="k">}</span>

<span class="nb">export </span><span class="nv">WLST_PROPERTIES</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">WLST_PROPERTIES</span><span class="k">}</span><span class="s2"> -Dwlst.debug.init=true"</span>
<span class="nb">export </span><span class="nv">WLST_PROPERTIES</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">WLST_PROPERTIES</span><span class="k">}</span><span class="s2"> -Dwlst.offline.log.priority=debug"</span>
<span class="nb">export </span><span class="nv">WLST_PROPERTIES</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">WLST_PROPERTIES</span><span class="k">}</span><span class="s2"> -Dwlst.offline.log=</span><span class="k">${</span><span class="nv">DLOG_DIR</span><span class="k">}</span><span class="s2">/debug.log"</span>

<span class="k">${</span><span class="nv">ORACLE_HOME</span><span class="k">}</span>/oracle_common/common/bin/wlst.sh <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh">
readDomainForUpgrade('&lt;A domain path which need-to-be-upgrade&gt;')
updateDomain()
closeDomain()
exit()
</span><span class="no">EOF
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>Upgrade 하려는 Domain의 ORACLE_HOME과
상위 버전의 ORACLE_HOME이 동일하면 Upgrade를 수행하는 WLST에서 다음과 유사한 Exception이 발생한다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre>SEVERE [20] com.oracle.cie.domain.progress.AbstractProgressGenerator - 20850: The domain is already at the current version.
20850: Domain Location:
        /sw/weblogic/12213/domains/one_domain
   Admin Server URL:
        http://wls.local:8001
Click cancel to exit the wizard.
20850: Click cancel to exit the wizard.
 Error occurred in phase {Selecting Reconfig Templates} execution.
com.oracle.cie.wizard.ext.progress.ProgressOperationException
    at com.oracle.cie.domain.progress.domain.reconfig.wlscore.SelectReconfigTemplatePhase.execute(SelectReconfigTemplatePhase.java:71)
    at com.oracle.cie.domain.progress.AbstractProgressGenerator.run(AbstractProgressGenerator.java:94)
    at java.lang.Thread.run(Thread.java:750)
</pre></td></tr></tbody></table></code></pre></div></div>

<p>실제 위 사례는,
<code class="language-plaintext highlighter-rouge">/sw/weblogic/12213</code>은 WLS 12.2.1.4 버전이며 (경로만 같을 뿐, 상위 버전),
사용하던 이전 버전의 <code class="language-plaintext highlighter-rouge">one_domain</code>만 새로 설치한 WLS 12.2.1.4 아래에 옮겨 경로를 유지하려고 했다.
업그레이드 과정 중(domain version이 변경된 이후로 보임), 기 경로가 동일하여 실패한다.</p>

<p>다르게 설명하면,
업그레이드를 위해 <code class="language-plaintext highlighter-rouge">one_domain</code>의 구성 요소를 Parsing 하는 과정 중에,
이미 <code class="language-plaintext highlighter-rouge">${DOMAIN_HOME}</code> 값이 변경될 필요 없이 동일하다는 것이 문제다.</p>

<h2 id="3-references">3. References</h2>
<p>동일 사례 없음
문서 작성하여 번호 부여 필요</p>]]></content><author><name>DongHyun Kim</name></author><category term="WebLogic" /><category term="Middleware" /><category term="WebLogic" /><category term="Upgrade" /><category term="WLST" /><summary type="html"><![CDATA[1. Overview WebLogic Domain Upgrade 방법 및 사례]]></summary></entry><entry><title type="html">[Linux] TigerVNC</title><link href="https://dhkim900331.github.io/linux/TigerVNC" rel="alternate" type="text/html" title="[Linux] TigerVNC" /><published>2024-11-11T05:17:56+00:00</published><updated>2024-11-11T05:17:56+00:00</updated><id>https://dhkim900331.github.io/linux/TigerVNC</id><content type="html" xml:base="https://dhkim900331.github.io/linux/TigerVNC"><![CDATA[<h2 id="1-overview">1. Overview</h2>
<p>Oracle Linux 8.X (RHEL 8.X) 에서 TigerVNC 사용 방법</p>

<p><br /><br /></p>

<p><br /></p>

<h2 id="2-descriptions">2. Descriptions</h2>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="rouge-code"><pre><span class="c"># packages 설치</span>
<span class="nb">sudo </span>yum <span class="nt">-y</span> <span class="nb">install </span>tigervnc-server tigervnc
<span class="nb">sudo </span>yum <span class="nt">-y</span> group <span class="nb">install </span>GNOME base-x

<span class="c"># GUI mode 활성화</span>
<span class="nb">sudo </span>systemctl set-default graphical.target
<span class="nb">sudo </span>systemctl isolate graphical.target

<span class="c"># VNC 접속 시 사용될 계정</span>
<span class="c"># :1 은 5901 port를 의미한다.</span>
<span class="nb">sudo echo</span> <span class="s1">':1=weblogic'</span> <span class="o">&gt;&gt;</span> /etc/tigervnc/vncserver.users

<span class="c"># :1 에 대한 service 파일 생성</span>
<span class="nb">sudo cp</span> /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:1.service

<span class="c"># VNC 전용 패스워드 설정</span>
su - weblogic
vncpasswd

<span class="c"># GNOME 세션을 사용하도록 설정</span>
<span class="nb">echo</span> <span class="s1">'session=gnome'</span> <span class="o">&gt;</span> ~/.vnc/config

<span class="c"># 서비스 활성화 및 시작</span>
<span class="nb">sudo </span>systemctl <span class="nb">enable </span>vncserver@:1.service
<span class="nb">sudo </span>systemctl start vncserver@:1.service
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /><br /></p>

<h2 id="3-trouble-shooting">3. Trouble Shooting</h2>

<p>vncserver@:1.service 시작이 되지 않는 경우, 아래와 같이 재설치 과정 후 문제가 해결되었음</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="nb">sudo </span>yum <span class="nt">-y</span> remove tigervnc-server tigervnc
<span class="nb">sudo </span>yum <span class="nt">-y</span> group remove GNOME base-x
<span class="nb">sudo </span>yum <span class="nt">-y</span> <span class="nb">install </span>tigervnc-server tigervnc
<span class="nb">sudo </span>yum <span class="nt">-y</span> group <span class="nb">install </span>GNOME base-x
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>Service는 정상 실행중이나, VNC Client 접근이 되지 않아 ${HOME}/.vnc/<hostname>:1.log 파일을 보면 아래 에러</hostname></p>

<blockquote>
  <p>참고 https://forums.fedoraforum.org/showthread.php?218463-VNC-Server-Warning-localhost-1-is-taken-because-of-tmp-X1-lock
```sh
Using desktop session gnome</p>
</blockquote>

<p>New ‘wls.local:1 (weblogic)’ desktop is wls.local:1</p>

<p>Starting desktop session gnome</p>

<p>(EE)
Fatal server error:
(EE) Could not create server lock file: /tmp/.X1-lock
(EE)
xinit: giving up
xinit: unable to connect to X server: Connection refused
xinit: server error</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>
&lt;br&gt;

다음 파일 제거 후 서비스 재시작

```sh
sudo rm -rf /tmp/.X1-lock 
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>서비스 재시작 하여 정상 active 된 것을 보고 다시 VNC Client로 엑세스하면 동일 로그 파일에 아래 에러</p>

<blockquote>
  <p>참고 https://unix.stackexchange.com/questions/232749/xvfb-screen-cannot-establish-any-listening-sockets-make-sure-an-x-server
```sh
Using desktop session gnome</p>
</blockquote>

<p>New ‘wls.local:1 (weblogic)’ desktop is wls.local:1</p>

<p>Starting desktop session gnome</p>

<p>_XSERVTransSocketUNIXCreateListener: …SocketCreateListener() failed
_XSERVTransMakeAllCOTSServerListeners: server already running
(EE)
Fatal server error:
(EE) Cannot establish any listening sockets - Make sure an X server isn’t already running(EE)
xinit: giving up
xinit: unable to connect to X server: Connection refused
xinit: server error</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre>
&lt;br&gt;

추가 파일까지 재차 삭제 후 서비스 재시작 및 로그인에 문제가 없음

```sh
sudo rm /tmp/.X11-unix/X1
sudo rm /tmp/.X1
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /><br /></p>

<h2 id="4-references">4. References</h2>

<p>https://www.ibm.com/support/pages/how-configure-vnc-server-red-hat-enterprise-linux-8</p>]]></content><author><name>DongHyun Kim</name></author><category term="Linux" /><category term="Linux" /><category term="OS" /><category term="TigerVNC" /><category term="VNC" /><category term="X-Window" /><summary type="html"><![CDATA[1. Overview Oracle Linux 8.X (RHEL 8.X) 에서 TigerVNC 사용 방법]]></summary></entry><entry><title type="html">[ODI] How to create a JMS XML Queue dataserver</title><link href="https://dhkim900331.github.io/odi/How-to-create-a-JMS-XML-Queue-dataserver" rel="alternate" type="text/html" title="[ODI] How to create a JMS XML Queue dataserver" /><published>2024-11-11T05:17:56+00:00</published><updated>2024-11-11T05:17:56+00:00</updated><id>https://dhkim900331.github.io/odi/How-to-create-a-JMS-XML-Queue-dataserver</id><content type="html" xml:base="https://dhkim900331.github.io/odi/How-to-create-a-JMS-XML-Queue-dataserver"><![CDATA[<h2 id="1-overview">1. Overview</h2>
<p>ODI Studio JMS XML Queue dataserver topology를 생성하는 방법</p>

<p><br /><br /></p>

<p><br /></p>

<h2 id="2-descriptions">2. Descriptions</h2>
<ol>
  <li>Topology - Physical Architecture - JMS Queue XML - <Created Object=""> - JNDI</Created></li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>JNDI Authentication : &lt;Undefined&gt;
JNDI User/Password
JNDI Protocol : &lt;Undefined&gt;
JNDI Driver : weblogic.jndi.WLInitialContextFactory
JNDI URL : http://&lt;IP&gt;:&lt;PORT&gt;?d=&lt;REALPATH of XSD FILE&gt;&amp;re=&lt;ROOT ELEMENT NAME&gt;&amp;s=&lt;SCHEMA NAME&gt;&amp;JMS_DESTINATION=&lt;QUEUE NAME&gt;
JNDI Resource : &lt;Connection Factory JNDI NAME&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<ul>
  <li>enable tunneling인 경우, http 를 사용할 수 있다. t3 protocol 로 연결 시도에 문제가 있는 경우, 시도해볼 필요가 있다.</li>
  <li>XSD file은 Queue에 저장되는 XML data의 schema 구조다.</li>
  <li>Root element는 XML data의 최상위 element를 의미한다.</li>
  <li>Schema name은 임의로 설정하고, 다른 Object에서 해당 Architecture 를 호출하는 Alias이다.</li>
  <li>JMS_DESTINATION은 WebLogic 기준, JNDI Name 그대로 기술하면 된다.</li>
  <li>JNDI Resource는 Connection factory 의 JNDI Name이고 그대로 기술하면 된다.</li>
</ul>

<p><br /></p>

<ol>
  <li>Topology - Physical/Logical Architecture - JMS Queue XML - <Created Object="" or="" Not=""> - Create Physical/Logical Schema</Created></li>
</ol>]]></content><author><name>DongHyun Kim</name></author><category term="ODI" /><category term="ODI" /><category term="Studio" /><category term="Topology" /><category term="JMS" /><category term="XML" /><category term="Queue" /><summary type="html"><![CDATA[1. Overview ODI Studio JMS XML Queue dataserver topology를 생성하는 방법]]></summary></entry><entry><title type="html">[ODI] Size limit exception with ODI studio when reading queue</title><link href="https://dhkim900331.github.io/odi/Size-Limit-Exception-With-ODI-Studio-When-Reading-Queue" rel="alternate" type="text/html" title="[ODI] Size limit exception with ODI studio when reading queue" /><published>2024-11-11T05:17:56+00:00</published><updated>2024-11-11T05:17:56+00:00</updated><id>https://dhkim900331.github.io/odi/Size-Limit-Exception-With-ODI-Studio-When-Reading-Queue</id><content type="html" xml:base="https://dhkim900331.github.io/odi/Size-Limit-Exception-With-ODI-Studio-When-Reading-Queue"><![CDATA[<h2 id="1-overview">1. Overview</h2>
<p>JMS Queue로 부터 Data를 읽으면, 임시로 생성된 ODI Studio in-memory table에 load 된다.
Queue data가 너무 큰 경우 Exception이 발생한다.</p>

<p><br /><br /></p>

<p><br /></p>

<h2 id="2-descriptions">2. Descriptions</h2>
<p>JMS XML Queue 에서 Big data를 가정하기 위해서, 다음의 Data를 생성한다.
단순히 id가 1인 single user에 email string이 매우 크도록 한 것이다.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre>    <span class="c1">// StringBuilder를 사용하여 큰 XML 문자열 생성</span>
    <span class="nc">StringBuilder</span> <span class="n">xmlDataBuilder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">(</span><span class="s">"&lt;?xml version='1.0' encoding='UTF-8'?&gt;"</span><span class="o">);</span>
    <span class="n">xmlDataBuilder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;users&gt;"</span><span class="o">);</span>
    <span class="n">xmlDataBuilder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;user&gt;"</span><span class="o">);</span>
    <span class="n">xmlDataBuilder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;id&gt;1&lt;/id&gt;"</span><span class="o">);</span>
    <span class="n">xmlDataBuilder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;name&gt;donghyun.kim&lt;/name&gt;"</span><span class="o">);</span>
    <span class="n">xmlDataBuilder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;email&gt;"</span><span class="o">);</span>

    <span class="c1">// 반복 횟수를 설정하여 10MB 이상의 데이터를 구성합니다.</span>
    <span class="kt">int</span> <span class="n">repeatCount</span> <span class="o">=</span> <span class="mi">50000</span><span class="o">;</span> <span class="c1">// 반복 횟수는 필요에 따라 조정 가능</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">repeatCount</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">xmlDataBuilder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"dong-hyun.kim@oracle.com"</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="n">xmlDataBuilder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;/email&gt;"</span><span class="o">);</span>
    <span class="n">xmlDataBuilder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;/user&gt;"</span><span class="o">);</span>    
    <span class="n">xmlDataBuilder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;/users&gt;"</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>JMS XML Queue 가져오기를 시도하면 다음과 같이 EMAIL column 의 data가 너무 커, ODI Studio in-memory로 가져오지 못한다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre>ODI-1228: Task Procedure-PRC.FARCRQ.LOAD-Load JMS fails on the target connection JMQX_FARCRQ.
Caused By: java.sql.SQLException: class java.sql.SQLException
java.sql.BatchUpdateException: data exception: string data, right truncation ; size limit: 255 table: FARCRQ_USER_ column: EMAIL
	at com.sunopsis.jdbc.driver.xml.SnpsXmlFile.readDocument(SnpsXmlFile.java:508)
	at com.sunopsis.jdbc.driver.xml.SnpsXmlFile.readDocument(SnpsXmlFile.java:453)
	at com.sunopsis.jdbc.driver.xml.SnpsXmlConnection.readStream(SnpsXmlConnection.java:1621)
	at com.sunopsis.jdbc.driver.JMSXMLStatement.loadJMS(JMSXMLStatement.java:693)
	at com.sunopsis.jdbc.driver.JMSXMLStatement.execute(JMSXMLStatement.java:147)
	at oracle.odi.runtime.agent.execution.sql.SQLCommand.execute(SQLCommand.java:271)
	at oracle.odi.runtime.agent.execution.sql.SQLExecutor.execute(SQLExecutor.java:142)
Caused by: java.sql.SQLException: java.sql.BatchUpdateException: data exception: string data, right truncation ; size limit: 255 table: FARCRQ_USER_ column: EMAIL
Caused by: java.sql.BatchUpdateException: data exception: string data, right truncation ; size limit: 255 table: FARCRQ_USER_ column: EMAIL
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>JMS Queue(또는 XML Queue) 의 Datasource 설정에, 다음의 두 옵션이 기본값 255로 설정되어 있다.
해당 값을 크게 키워 시도해본다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>default_length_varchar = 255
dp_varchar_length = 255
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>동일한 현상이 발생한다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre>Caused by: java.sql.BatchUpdateException: data exception: string data, right truncation ; size limit: 99999 table: FARCRQ_USER_ column: EMAIL
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeBatch(Unknown Source)
	at com.sunopsis.jdbc.driver.xml.SnpsXmlPreparedStatementRedirector.executeBatch(SnpsXmlPreparedStatementRedirector.java:376)
	at com.sunopsis.jdbc.driver.xml.SnpsXmlPreparedStatement.executeBatch(SnpsXmlPreparedStatement.java:16)
	at com.sunopsis.rdb.manager.SnpsRDBDataInserterBatchUpdate.insertionFinished(SnpsRDBDataInserterBatchUpdate.java:118)
	at com.sunopsis.jdbc.driver.xml.mappers.SnpsXmlModelMapperLinks.endLoadElements(SnpsXmlModelMapperLinks.java:751)
	at com.sunopsis.jdbc.driver.xml.data.AbstractXmlLoader.loadFile(AbstractXmlLoader.java:209)
	... 23 more
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>이 근본적인 문제 해결을 위해, 다음과 같은 data를 생성하도록 코드를 변경한다.
특정 column 자체는 작지만, 많은 user structures 를 갖도록 구성했다.
30만 loop 기준, 20MB 이상의 Queue message가 생성이 된다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre>    <span class="c1">// StringBuilder를 사용하여 큰 XML 문자열 생성</span>
    <span class="nc">StringBuilder</span> <span class="n">xmlDataBuilder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">(</span><span class="s">"&lt;?xml version='1.0' encoding='UTF-8'?&gt;"</span><span class="o">);</span>
    <span class="n">xmlDataBuilder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;users&gt;"</span><span class="o">);</span>

    <span class="c1">// 반복 횟수를 설정하여 10MB 이상의 데이터를 구성합니다.</span>
    <span class="kt">int</span> <span class="n">repeatCount</span> <span class="o">=</span> <span class="mi">300000</span><span class="o">;</span> <span class="c1">// 반복 횟수는 필요에 따라 조정 가능</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">repeatCount</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">xmlDataBuilder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;user&gt;&lt;id&gt;"</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span> <span class="s">"&lt;/id&gt;&lt;name&gt;donghyun.kim&lt;/name&gt;&lt;email&gt;dong-hyun.kim@oracle.com&lt;/email&gt;&lt;/user&gt;"</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="n">xmlDataBuilder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;/users&gt;"</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>문제 없이 JMS XML Queue load를 수행한다.
특정 고객은, 아래와 같이 Message Limit Exception이 발생하였는데, 나와 어떤 것들이 달라 차이점이 있는지는 확인되지 않는다.
고객은, -Dweblogic.MaxMessageSize 옵션 기본값 10MB 를 더 키워 문제를 해결한 상황.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>  JMSTopicConnection.openFileForResultSet():JMSException while fetching message :weblogic.messaging.dispatcher.DispatcherException: weblogic.rjvm.PeerGoneException: ; nested exception is: [[
  weblogic.socket.MaxMessageSizeExceededException: Incoming message of size: '10000080' bytes exceeds the configured maximum of: '10000000' bytes for protocol: 't3'
  ]]
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>DongHyun Kim</name></author><category term="ODI" /><category term="ODI" /><category term="Studio" /><category term="JMS" /><category term="XML" /><category term="Queue" /><category term="MaxMessageSize" /><summary type="html"><![CDATA[1. Overview JMS Queue로 부터 Data를 읽으면, 임시로 생성된 ODI Studio in-memory table에 load 된다. Queue data가 너무 큰 경우 Exception이 발생한다.]]></summary></entry><entry><title type="html">[WebTier/OHS] All In One Script For 12cR1</title><link href="https://dhkim900331.github.io/webtier/All-In-One-Script-For-12cR1" rel="alternate" type="text/html" title="[WebTier/OHS] All In One Script For 12cR1" /><published>2024-11-11T05:16:52+00:00</published><updated>2024-11-11T05:16:52+00:00</updated><id>https://dhkim900331.github.io/webtier/All-In-One-Script-For-12cR1</id><content type="html" xml:base="https://dhkim900331.github.io/webtier/All-In-One-Script-For-12cR1"><![CDATA[<h2 id="1-overview">1. Overview</h2>

<p>Oracle HTTP Server 12cR1 테스트 환경을 자동 재구축을 위해 모든 기본 설치 환경을 집약한다.</p>

<p><br /><br /></p>

<h2 id="2-descriptions">2. Descriptions</h2>

<p>All-In-One-Script-For-12cR1.sh 실행으로 다음 환경을 구성하도록 한다.</p>

<ul>
  <li>base_domain</li>
  <li>NodeManager (SecureListner=false, TCP 5556)</li>
  <li>Worker 2ea</li>
</ul>

<p><br /><br /></p>

<h2 id="3-script">3. Script</h2>

<h3 id="31-engine">3.1 Engine</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
</pre></td><td class="rouge-code"><pre><span class="nv">BASEDIR</span><span class="o">=</span>/sw/downloads
<span class="nv">OS_USERNAME</span><span class="o">=</span><span class="si">$(</span><span class="nb">id</span> <span class="nt">--user</span> <span class="nt">--name</span><span class="si">)</span>
<span class="nv">OS_GROUPNAME</span><span class="o">=</span><span class="si">$(</span><span class="nb">id</span> <span class="nt">--group</span> <span class="nt">--name</span><span class="si">)</span>

<span class="nv">OHS_INSTALL_FILE</span><span class="o">=</span>fmw_12.1.3.0.0_ohs_linux64.bin
<span class="nv">ENGINE_PATH</span><span class="o">=</span>/sw/webtier/12cR1
<span class="nv">INVENTORY_PATH</span><span class="o">=</span>/sw/webtier/inventories/12cR1
<span class="nv">INVENTORY_GROUP</span><span class="o">=</span><span class="si">$(</span><span class="nb">id</span> <span class="nt">--group</span> <span class="nt">--name</span><span class="si">)</span>

<span class="nv">DOMAIN_NAME</span><span class="o">=</span>base_domain
<span class="nv">DOMAIN_HOME</span><span class="o">=</span><span class="k">${</span><span class="nv">ENGINE_PATH</span><span class="k">}</span>/domains/<span class="k">${</span><span class="nv">DOMAIN_NAME</span><span class="k">}</span>

<span class="nv">HOSTNAME</span><span class="o">=</span>wls.local
<span class="nv">NM_USERNAME</span><span class="o">=</span>webtier
<span class="nv">NM_PASSWORD</span><span class="o">=</span>webtier1
<span class="nv">NM_ADDR</span><span class="o">=</span><span class="k">${</span><span class="nv">HOSTNAME</span><span class="k">}</span>
<span class="nv">NM_PORT</span><span class="o">=</span>5556

<span class="nv">WORKER_NAME_1</span><span class="o">=</span>worker1
<span class="nv">WORKER_ADDR_1</span><span class="o">=</span><span class="k">${</span><span class="nv">HOSTNAME</span><span class="k">}</span>
<span class="nv">WORKER_PORT_1</span><span class="o">=</span>10080
<span class="nv">WORKER_SSL_1</span><span class="o">=</span>10443
<span class="nv">WORKER_ADMIN_ADDR_1</span><span class="o">=</span>127.0.0.1
<span class="nv">WORKER_ADMIN_PORT_1</span><span class="o">=</span>10099

<span class="nv">WORKER_NAME_2</span><span class="o">=</span>worker2
<span class="nv">WORKER_ADDR_2</span><span class="o">=</span><span class="k">${</span><span class="nv">HOSTNAME</span><span class="k">}</span>
<span class="nv">WORKER_PORT_2</span><span class="o">=</span>10180
<span class="nv">WORKER_SSL_2</span><span class="o">=</span>10543
<span class="nv">WORKER_ADMIN_ADDR_2</span><span class="o">=</span>127.0.0.1
<span class="nv">WORKER_ADMIN_PORT_2</span><span class="o">=</span>10199


<span class="c"># (1) ResponseFile</span>
<span class="c"># https://docs.oracle.com/middleware/1213/core/WTINS/standalone_domain.htm</span>
<span class="c"># https://docs.oracle.com/middleware/1212/core/OUIRF/response_file.htm#OUIRF390</span>
<span class="c"># https://dhkim900331.github.io/webtier/All-In-One-Script-For-12cR1</span>

<span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh"> &gt; </span><span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span><span class="sh">/rsp
[ENGINE]
#DO NOT CHANGE THIS.
Response File Version=1.0.0.0.0

[GENERIC]
ORACLE_HOME=</span><span class="k">${</span><span class="nv">ENGINE_PATH</span><span class="k">}</span><span class="sh">
INSTALL_TYPE=Standalone HTTP Server (Managed independently of WebLogic server)
DECLINE_SECURITY_UPDATES=true
SECURITY_UPDATES_VIA_MYORACLESUPPORT=false
</span><span class="no">EOF


</span><span class="c"># (2) Inventory</span>
<span class="c"># https://docs.oracle.com/en/middleware/fusion-middleware/12.2.1.4/ouirf/using-oracle-universal-installer-silent-mode.html#GUID-756E3FD9-4094-412F-9BEB-72C5FD51056B</span>
<span class="c"># * inventory.loc 파일 샘플은 문서에 없음</span>

<span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh"> &gt; </span><span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span><span class="sh">/loc
inventory_loc=</span><span class="k">${</span><span class="nv">INVENTORY_PATH</span><span class="k">}</span><span class="sh">
inst_group=</span><span class="k">${</span><span class="nv">INVENTORY_GROUP</span><span class="k">}</span><span class="sh">
</span><span class="no">EOF


</span><span class="c"># (3) Installation</span>

<span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span>/<span class="k">${</span><span class="nv">OHS_INSTALL_FILE</span><span class="k">}</span> <span class="nt">-silent</span> <span class="nt">-responseFile</span> <span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span>/rsp <span class="nt">-invPtrLoc</span> <span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span>/loc
</pre></td></tr></tbody></table></code></pre></div></div>

<p>ADMIN_ADDR을 127.0.0.1 으로만 해야 되는 것으로 테스트상 확인되는데,</p>

<p>구체적인 이유는 확인되지 않는다.</p>

<p><br /><br /></p>

<h3 id="32-domain">3.2 Domain</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="c"># (4) Domain</span>

<span class="k">${</span><span class="nv">ENGINE_PATH</span><span class="k">}</span>/oracle_common/common/bin/wlst.sh <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh">
readTemplate('</span><span class="k">${</span><span class="nv">ENGINE_PATH</span><span class="k">}</span><span class="sh">/wlserver/common/templates/wls/base_standalone.jar')
addTemplate('</span><span class="k">${</span><span class="nv">ENGINE_PATH</span><span class="k">}</span><span class="sh">/ohs/common/templates/wls/ohs_standalone_template_12.1.3.jar')
writeDomain('</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">')
closeTemplate()
exit()
</span><span class="no">EOF
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="33-nodemanager">3.3 NodeManager</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="rouge-code"><pre><span class="c"># (5) NodeManager</span>

<span class="k">${</span><span class="nv">ENGINE_PATH</span><span class="k">}</span>/oracle_common/common/bin/wlst.sh <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh">
readDomain('</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">')
cd('/SecurityConfiguration/base_domain')
set('NodeManagerUsername','</span><span class="k">${</span><span class="nv">NM_USERNAME</span><span class="k">}</span><span class="sh">')
set('NodeManagerPasswordEncrypted','</span><span class="k">${</span><span class="nv">NM_PASSWORD</span><span class="k">}</span><span class="sh">')

cd('/Machine/localmachine/NodeManager/localmachine')
set('ListenAddress','</span><span class="k">${</span><span class="nv">NM_ADDR</span><span class="k">}</span><span class="sh">')
set('ListenPort',</span><span class="k">${</span><span class="nv">NM_PORT</span><span class="k">}</span><span class="sh">)

cd('/NMProperties')
set('SecureListener',false)
updateDomain()
</span><span class="no">EOF


</span><span class="c"># (6) NodeManager SSL disabled</span>
<span class="c"># WLST 으로 update 되지 않아 추가로 해야 한다. 실질적으로 아래가 필수</span>
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s1">'s/SecureListener=true/SecureListener=false/g'</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/nodemanager/nodemanager.properties
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="34-component">3.4 Component</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="rouge-code"><pre><span class="c"># (7) Component</span>
<span class="k">${</span><span class="nv">ENGINE_PATH</span><span class="k">}</span>/oracle_common/common/bin/wlst.sh <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh">
readDomain('</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">')

create('</span><span class="k">${</span><span class="nv">WORKER_NAME_1</span><span class="k">}</span><span class="sh">','SystemComponent')
create('</span><span class="k">${</span><span class="nv">WORKER_NAME_2</span><span class="k">}</span><span class="sh">','SystemComponent')
delete('ohs1','SystemComponent')

cd('/SystemComponent/</span><span class="k">${</span><span class="nv">WORKER_NAME_1</span><span class="k">}</span><span class="sh">')
cmo.setComponentType('OHS')
cd('/SystemComponent/</span><span class="k">${</span><span class="nv">WORKER_NAME_2</span><span class="k">}</span><span class="sh">')
cmo.setComponentType('OHS')

cd('/OHS/</span><span class="k">${</span><span class="nv">WORKER_NAME_1</span><span class="k">}</span><span class="sh">')
cmo.setListenAddress('</span><span class="k">${</span><span class="nv">WORKER_ADDR_1</span><span class="k">}</span><span class="sh">')
cmo.setListenPort('</span><span class="k">${</span><span class="nv">WORKER_PORT_1</span><span class="k">}</span><span class="sh">')
cmo.setSSLListenPort('</span><span class="k">${</span><span class="nv">WORKER_SSL_1</span><span class="k">}</span><span class="sh">')
cmo.setAdminHost('</span><span class="k">${</span><span class="nv">WORKER_ADMIN_ADDR_1</span><span class="k">}</span><span class="sh">')
cmo.setAdminPort('</span><span class="k">${</span><span class="nv">WORKER_ADMIN_PORT_1</span><span class="k">}</span><span class="sh">')
cmo.setServerName('http://</span><span class="k">${</span><span class="nv">HOSTNAME</span><span class="k">}</span><span class="sh">:</span><span class="k">${</span><span class="nv">WORKER_PORT_1</span><span class="k">}</span><span class="sh">')

cd('/OHS/</span><span class="k">${</span><span class="nv">WORKER_NAME_2</span><span class="k">}</span><span class="sh">')
cmo.setListenAddress('</span><span class="k">${</span><span class="nv">WORKER_ADDR_2</span><span class="k">}</span><span class="sh">')
cmo.setListenPort('</span><span class="k">${</span><span class="nv">WORKER_PORT_2</span><span class="k">}</span><span class="sh">')
cmo.setSSLListenPort('</span><span class="k">${</span><span class="nv">WORKER_SSL_2</span><span class="k">}</span><span class="sh">')
cmo.setAdminHost('</span><span class="k">${</span><span class="nv">WORKER_ADMIN_ADDR_2</span><span class="k">}</span><span class="sh">')
cmo.setAdminPort('</span><span class="k">${</span><span class="nv">WORKER_ADMIN_PORT_2</span><span class="k">}</span><span class="sh">')
cmo.setServerName('http://</span><span class="k">${</span><span class="nv">HOSTNAME</span><span class="k">}</span><span class="sh">:</span><span class="k">${</span><span class="nv">WORKER_PORT_2</span><span class="k">}</span><span class="sh">')

updateDomain()
exit()
</span><span class="no">EOF
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="35-create-nodemanager-scripts-start-stop-log-ps">3.5 Create NodeManager Scripts (start, stop, log, ps)</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
</pre></td><td class="rouge-code"><pre><span class="c"># (8) Create NodeManager Scripts (start, stop, log, ps)</span>
<span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/startNM.sh
#!/usr/bin/bash
BASEDIR=</span><span class="si">$(</span><span class="nb">realpath</span> <span class="si">$(</span><span class="nb">dirname</span> <span class="nv">$0</span><span class="si">))</span><span class="sh">
SERVER_NAME=nodemanager
DOMAIN_HOME=</span><span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span><span class="sh">
LOG_HOME=</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/logs/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">
LOG_TIME=</span><span class="si">$(</span><span class="nb">date</span> +%y%m%d_%H%M<span class="si">)</span><span class="sh">

##### User Check #####
USER=#OS_USERNAME#
if [ "</span><span class="nv">$USER</span><span class="sh">" != `/usr/bin/whoami` ]; then
     echo "* you do not have permission. *"
     exit;
fi
####################

## Process Check ##
WEB_PID=</span><span class="si">$(</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/psNM.sh<span class="si">)</span><span class="sh">
if [ "</span><span class="nv">$WEB_PID</span><span class="sh">" != "" ]; then
     echo "Server already Started."
     exit;
fi
###################

mkdir -p </span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">
mv </span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out </span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out.</span><span class="k">${</span><span class="nv">LOG_TIME</span><span class="k">}</span><span class="sh">
nohup </span><span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span><span class="sh">/bin/startNodeManager.sh &gt;&gt; </span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out 2&gt;&amp;1 &amp;
</span><span class="no">EOF


</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/stopNM.sh
#!/usr/bin/bash
BASEDIR=</span><span class="si">$(</span><span class="nb">realpath</span> <span class="si">$(</span><span class="nb">dirname</span> <span class="nv">$0</span><span class="si">))</span><span class="sh">
SERVER_NAME=nodemanager
DOMAIN_HOME=</span><span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span><span class="sh">
LOG_HOME=</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/logs/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">

##### User Check #####
USER=#OS_USERNAME#
if [ "</span><span class="nv">$USER</span><span class="sh">" != `/usr/bin/whoami` ]; then
     echo "* you do not have permission. *"
     exit;
fi
####################

## Process Check ##
WEB_PID=</span><span class="si">$(</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/psNM.sh<span class="si">)</span><span class="sh">
if [ "</span><span class="nv">$WEB_PID</span><span class="sh">" == "" ]; then
     echo "Server already Stopped."
     exit;
fi
###################

</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/bin/stopNodeManager.sh &gt;&gt; </span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out
sleep 1
tail -5 </span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out
</span><span class="no">EOF


</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/logNM.sh
#!/usr/bin/bash
BASEDIR=</span><span class="si">$(</span><span class="nb">realpath</span> <span class="si">$(</span><span class="nb">dirname</span> <span class="nv">$0</span><span class="si">))</span><span class="sh">
SERVER_NAME=nodemanager
DOMAIN_HOME=</span><span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span><span class="sh">
LOG_HOME=</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/logs/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">
tail -10f </span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out
</span><span class="no">EOF


</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/psNM.sh
#!/usr/bin/bash
BASEDIR=</span><span class="si">$(</span><span class="nb">realpath</span> <span class="si">$(</span><span class="nb">dirname</span> <span class="nv">$0</span><span class="si">))</span><span class="sh">
DOMAIN_HOME=</span><span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span><span class="sh">
ps -ef | grep "java" | grep "weblogic.NodeManager -v" | grep "</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">"
</span><span class="no">EOF
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="36-create-component-scripts-start-stop-ps">3.6 Create Component Scripts (start, stop, ps)</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
</pre></td><td class="rouge-code"><pre><span class="c"># (9) Create Component Scripts (start, stop, ps)</span>
<span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/start-worker.sh
#!/usr/bin/bash
BASEDIR=</span><span class="si">$(</span><span class="nb">realpath</span> <span class="si">$(</span><span class="nb">dirname</span> <span class="nv">$0</span><span class="si">))</span><span class="sh">
DOMAIN_HOME=</span><span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span><span class="sh">
DOMAIN_NAME=</span><span class="si">$(</span><span class="nb">basename</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="si">)</span><span class="sh">
WORKER=#WORKER_NAME#
NM_ADDR=#NM_ADDR#
NM_PORT=#NM_PORT#
NM_USERNAME=#NM_USERNAME#
NM_PASSWORD=#NM_PASSWORD#
WL_HOME=</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/../../wlserver

##### User Check #####
USER=#OS_USERNAME#
if [ "</span><span class="nv">$USER</span><span class="sh">" != `/usr/bin/whoami` ]; then
     echo "* you do not have permission. *"
     exit;
fi
####################

## Process Check ##
WEB_PID=</span><span class="si">$(</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/ps-<span class="k">${</span><span class="nv">WORKER</span><span class="k">}</span>.sh<span class="si">)</span><span class="sh">
if [ "</span><span class="nv">$WEB_PID</span><span class="sh">" != "" ]; then
     echo "Server already Started."
     exit;
fi
###################

</span><span class="k">${</span><span class="nv">WL_HOME</span><span class="k">}</span><span class="sh">/../oracle_common/common/bin/wlst.sh &lt;&lt; INNER_EOF
nmConnect('</span><span class="k">${</span><span class="nv">NM_USERNAME</span><span class="k">}</span><span class="sh">', '</span><span class="k">${</span><span class="nv">NM_PASSWORD</span><span class="k">}</span><span class="sh">', '</span><span class="k">${</span><span class="nv">NM_ADDR</span><span class="k">}</span><span class="sh">', '</span><span class="k">${</span><span class="nv">NM_PORT</span><span class="k">}</span><span class="sh">', '</span><span class="k">${</span><span class="nv">DOMAIN_NAME</span><span class="k">}</span><span class="sh">', '</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">','plain')
nmStart(serverName='</span><span class="k">${</span><span class="nv">WORKER</span><span class="k">}</span><span class="sh">', serverType='OHS')
nmServerStatus(serverName='</span><span class="k">${</span><span class="nv">WORKER</span><span class="k">}</span><span class="sh">', serverType='OHS')
nmDisconnect()
exit()
INNER_EOF
</span><span class="no">EOF


</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/stop-worker.sh
#!/usr/bin/bash
BASEDIR=</span><span class="si">$(</span><span class="nb">realpath</span> <span class="si">$(</span><span class="nb">dirname</span> <span class="nv">$0</span><span class="si">))</span><span class="sh">
DOMAIN_HOME=</span><span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span><span class="sh">
DOMAIN_NAME=</span><span class="si">$(</span><span class="nb">basename</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="si">)</span><span class="sh">
WORKER=#WORKER_NAME#
NM_ADDR=#NM_ADDR#
NM_PORT=#NM_PORT#
NM_USERNAME=#NM_USERNAME#
NM_PASSWORD=#NM_PASSWORD#
WL_HOME=</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/../../wlserver

##### User Check #####
USER=#OS_USERNAME#
if [ "</span><span class="nv">$USER</span><span class="sh">" != `/usr/bin/whoami` ]; then
     echo "* you do not have permission. *"
     exit;
fi
####################

## Process Check ##
WEB_PID=</span><span class="si">$(</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/ps-<span class="k">${</span><span class="nv">WORKER</span><span class="k">}</span>.sh<span class="si">)</span><span class="sh">
if [ "</span><span class="nv">$WEB_PID</span><span class="sh">" == "" ]; then
     echo "Server already Stopped."
     exit;
fi
###################

</span><span class="k">${</span><span class="nv">WL_HOME</span><span class="k">}</span><span class="sh">/../oracle_common/common/bin/wlst.sh &lt;&lt; INNER_EOF
nmConnect('</span><span class="k">${</span><span class="nv">NM_USERNAME</span><span class="k">}</span><span class="sh">', '</span><span class="k">${</span><span class="nv">NM_PASSWORD</span><span class="k">}</span><span class="sh">', '</span><span class="k">${</span><span class="nv">NM_ADDR</span><span class="k">}</span><span class="sh">', '</span><span class="k">${</span><span class="nv">NM_PORT</span><span class="k">}</span><span class="sh">', '</span><span class="k">${</span><span class="nv">DOMAIN_NAME</span><span class="k">}</span><span class="sh">', '</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">','plain')
nmKill(serverName='</span><span class="k">${</span><span class="nv">WORKER</span><span class="k">}</span><span class="sh">', serverType='OHS')
nmServerStatus(serverName='</span><span class="k">${</span><span class="nv">WORKER</span><span class="k">}</span><span class="sh">', serverType='OHS')
nmDisconnect()
exit()
INNER_EOF
</span><span class="no">EOF


</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/ps-worker.sh
#!/usr/bin/bash
BASEDIR=</span><span class="si">$(</span><span class="nb">realpath</span> <span class="si">$(</span><span class="nb">dirname</span> <span class="nv">$0</span><span class="si">))</span><span class="sh">
DOMAIN_HOME=</span><span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span><span class="sh">
WORKER=#WORKER_NAME#
ps -ef | grep "httpd" | grep "</span><span class="k">${</span><span class="nv">WORKER</span><span class="k">}</span><span class="sh">" | grep "</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">"
</span><span class="no">EOF

</span><span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#OS_USERNAME#|</span><span class="k">${</span><span class="nv">OS_USERNAME</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*</span>NM.sh

<span class="nb">cp</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/start-worker.sh <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/start-<span class="k">${</span><span class="nv">WORKER_NAME_1</span><span class="k">}</span>.sh
<span class="nb">cp</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/stop-worker.sh <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/stop-<span class="k">${</span><span class="nv">WORKER_NAME_1</span><span class="k">}</span>.sh
<span class="nb">cp</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/ps-worker.sh <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/ps-<span class="k">${</span><span class="nv">WORKER_NAME_1</span><span class="k">}</span>.sh

<span class="nb">cp</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/start-worker.sh <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/start-<span class="k">${</span><span class="nv">WORKER_NAME_2</span><span class="k">}</span>.sh
<span class="nb">cp</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/stop-worker.sh <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/stop-<span class="k">${</span><span class="nv">WORKER_NAME_2</span><span class="k">}</span>.sh
<span class="nb">cp</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/ps-worker.sh <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/ps-<span class="k">${</span><span class="nv">WORKER_NAME_2</span><span class="k">}</span>.sh

<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/#WORKER_NAME#/</span><span class="k">${</span><span class="nv">WORKER_NAME_1</span><span class="k">}</span><span class="s2">/g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">WORKER_NAME_1</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/#NM_ADDR#/</span><span class="k">${</span><span class="nv">NM_ADDR</span><span class="k">}</span><span class="s2">/g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">WORKER_NAME_1</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/#NM_PORT#/</span><span class="k">${</span><span class="nv">NM_PORT</span><span class="k">}</span><span class="s2">/g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">WORKER_NAME_1</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/#NM_USERNAME#/</span><span class="k">${</span><span class="nv">NM_USERNAME</span><span class="k">}</span><span class="s2">/g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">WORKER_NAME_1</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/#NM_PASSWORD#/</span><span class="k">${</span><span class="nv">NM_PASSWORD</span><span class="k">}</span><span class="s2">/g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">WORKER_NAME_1</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/#NM_ADDR#/</span><span class="k">${</span><span class="nv">NM_ADDR</span><span class="k">}</span><span class="s2">/g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">WORKER_NAME_1</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#OS_USERNAME#|</span><span class="k">${</span><span class="nv">OS_USERNAME</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">WORKER_NAME_1</span><span class="k">}</span>.sh


<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/#WORKER_NAME#/</span><span class="k">${</span><span class="nv">WORKER_NAME_2</span><span class="k">}</span><span class="s2">/g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">WORKER_NAME_2</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/#NM_ADDR#/</span><span class="k">${</span><span class="nv">NM_ADDR</span><span class="k">}</span><span class="s2">/g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">WORKER_NAME_2</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/#NM_PORT#/</span><span class="k">${</span><span class="nv">NM_PORT</span><span class="k">}</span><span class="s2">/g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">WORKER_NAME_2</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/#NM_USERNAME#/</span><span class="k">${</span><span class="nv">NM_USERNAME</span><span class="k">}</span><span class="s2">/g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">WORKER_NAME_2</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/#NM_PASSWORD#/</span><span class="k">${</span><span class="nv">NM_PASSWORD</span><span class="k">}</span><span class="s2">/g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">WORKER_NAME_2</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/#NM_ADDR#/</span><span class="k">${</span><span class="nv">NM_ADDR</span><span class="k">}</span><span class="s2">/g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">WORKER_NAME_2</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#OS_USERNAME#|</span><span class="k">${</span><span class="nv">OS_USERNAME</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">WORKER_NAME_2</span><span class="k">}</span>.sh
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>DongHyun Kim</name></author><category term="WebTier" /><category term="WebTier" /><category term="OHS" /><category term="Apache" /><category term="Install" /><category term="WLST" /><category term="Jython" /><summary type="html"><![CDATA[1. Overview]]></summary></entry><entry><title type="html">[WebLogic] Redeploy App With Removing Cache</title><link href="https://dhkim900331.github.io/weblogic/Deploy-App-With-Removing-Cache" rel="alternate" type="text/html" title="[WebLogic] Redeploy App With Removing Cache" /><published>2024-11-11T05:02:26+00:00</published><updated>2024-11-11T05:02:26+00:00</updated><id>https://dhkim900331.github.io/weblogic/Deploy-App-With-Removing-Cache</id><content type="html" xml:base="https://dhkim900331.github.io/weblogic/Deploy-App-With-Removing-Cache"><![CDATA[<h2 id="1-overview">1. Overview</h2>

<p>Nostage mode App의 Redeploy를 단순히 Cache 삭제하여 수행하는 방법</p>

<p><br /><br /></p>

<h2 id="2-descriptions">2. Descriptions</h2>

<p>App은 배치 시에, <code class="language-plaintext highlighter-rouge">${DOMAIN_HOME}/servers/&lt;SERVER&gt;/tmp/_WL_user</code> 아래에 생성되고,</p>

<p>첫 호출되는 JSP는 class compile 되어 위치한다.</p>

<ol>
  <li>
    <p>Instance 종료</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">_WL_user</code> 아래 App 삭제</p>
  </li>
  <li>
    <p>Instance 시작</p>
  </li>
</ol>

<p><br /></p>

<p>단순한 세가지 단계만으로 App 재배포가 완료된다.</p>

<p><br /><br /></p>

<h2 id="3-references">3. References</h2>

<p><strong>How To Clear The Server Cache Directories (cache, stage, tmp) (Doc ID 1323602.1)</strong></p>

<p><strong>How to Achieve Auto Compile of Updated JSPs in WebLogic Server (Doc ID 1358621.1)</strong></p>]]></content><author><name>DongHyun Kim</name></author><category term="WebLogic" /><category term="Middleware" /><category term="WebLogic" /><category term="Deploy" /><category term="Cache" /><summary type="html"><![CDATA[1. Overview]]></summary></entry><entry><title type="html">[WebTier/OHS] iPlanet Error Page To OHS</title><link href="https://dhkim900331.github.io/webtier/iPlanet-Error-Page-To-OHS" rel="alternate" type="text/html" title="[WebTier/OHS] iPlanet Error Page To OHS" /><published>2024-11-05T05:25:03+00:00</published><updated>2024-11-05T05:25:03+00:00</updated><id>https://dhkim900331.github.io/webtier/iPlanet-Error-Page-To-OHS</id><content type="html" xml:base="https://dhkim900331.github.io/webtier/iPlanet-Error-Page-To-OHS"><![CDATA[<h2 id="1-overview">1. Overview</h2>
<p>iPlanet 에 정의된 Error page 설정을 OHS로 Migration 하는 방법</p>

<p><br /><br /></p>

<p><br /></p>

<h2 id="2-descriptions">2. Descriptions</h2>
<p>iPlanet에 정의된 Error page 설정은 다음과 같이 HTTP Response Status Code가 정의되지 않고, Status Text로 정의되어 있다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre># in Ipalnet
Error fn="send-error" reason="Bad Request" path="/error/error_page.html"
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>OHS에서 ErrorDocument 설정은, <a href="https://httpd.apache.org/docs/current/mod/core.html#errordocument">&lt;3-digit code&gt;</a> 가 필요하다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre># in OHS
ErrorDocument 400 "/error/bad-request.html"
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>iPlanet에 정의된 <code class="language-plaintext highlighter-rouge">reason</code> 값을 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status">HTTP response status codes</a>를 제공하는 사이트에서 Code 값을 확인하여, OHS에 정의할 수 있다.</p>

<p><br /><br /></p>

<h2 id="3-references">3. References</h2>
<p>iPlanet 에 정의된 Error page 설정을 OHS로 Migration 하는 방법 (Doc ID 3057285.1)</p>]]></content><author><name>DongHyun Kim</name></author><category term="WebTier" /><category term="WebTier" /><category term="OHS" /><category term="iPlanet" /><category term="ErrorDocument" /><summary type="html"><![CDATA[1. Overview iPlanet 에 정의된 Error page 설정을 OHS로 Migration 하는 방법]]></summary></entry><entry><title type="html">[WebLogic/SAML] How to use expired certificate with SAML</title><link href="https://dhkim900331.github.io/weblogic/How-to-use-expired-certificate-with-SAML" rel="alternate" type="text/html" title="[WebLogic/SAML] How to use expired certificate with SAML" /><published>2024-10-30T05:46:10+00:00</published><updated>2024-10-30T05:46:10+00:00</updated><id>https://dhkim900331.github.io/weblogic/How-to-use-expired-certificate-with-SAML</id><content type="html" xml:base="https://dhkim900331.github.io/weblogic/How-to-use-expired-certificate-with-SAML"><![CDATA[<h2 id="1-overview">1. Overview</h2>

<p>WebLogic 12cR2 에서 SSO Server에 참여하기 위해 Service Provider로 SAML 2.0 Service를 구성한다.</p>

<p>만료된 인증서를 사용해도 되는가?</p>

<p><br /><br /></p>

<h2 id="2-descriptions">2. Descriptions</h2>

<p>기본적으로 만료된 인증서를 쓰는 것은, 보안 취약점을 야기한다.</p>

<p>Client와 Server간의 주고 받는 Data는 여전히 Encrypt 되지만 그럼에도 만료된 인증서를 쓰는 것은,</p>

<p>노후화된 Algorithm을 쓰는 것과 같고, <a href="https://en.wikipedia.org/wiki/Identity_provider_(SAML)">Identity Provider</a> 의 보안 정책에 위반 될 수 있다.</p>

<p><br /></p>

<p>만료된 인증서를 사용하기 위해서는, Identity Provider로 동작하는 SSO Server Manager의 Confirm이 필요하다.</p>

<p>WebLogic에서는 SAML 2.0 Service를 사용할 때, 만료된 인증서를 사용하기 위해서는 다음의 Option을 제공하고 있다.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nt">-Dcom</span>.bea.common.security.saml2.allowExpiredCerts<span class="o">=</span><span class="nb">true</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p>com.bea.common.security.saml2.allowExpiredCerts은 <a href="https://docs.oracle.com/middleware/12213/wls/NOTES/whatsnew.htm#GUID-5963C8BA-0F93-45C2-9FD2-6BB09B261F44">WebLogic Server 12.2.1.3.0 (Patch Set 3)에서 추가된 SAML Update 사항</a> 입니다.</p>
</blockquote>

<blockquote>
  <ul>
    <li>
      <p>In this release of WebLogic Server, the SAML 2.0 implementation no longer uses certificates that are expired or not yet valid in SAML signing. To allow use of these certificates, set the Java system property com.bea.common.security.saml2.allowExpiredCerts to true. For example, specify the following option in the Java command that starts WebLogic Server:</p>

      <p><code class="language-plaintext highlighter-rouge">-Dcom.bea.common.security.saml2.allowExpiredCerts=true</code></p>
    </li>
  </ul>
</blockquote>

<p><br /><br /></p>

<h2 id="3-references">3. References</h2>

<p><strong>WebLogic을 SAML 2.0 Service Provider로 구성 할 때, 만료된 인증서를 사용하는 방법 (Doc ID 3049995.1)</strong></p>

<p>https://en.wikipedia.org/wiki/Identity_provider_(SAML)</p>

<p>https://docs.oracle.com/en/middleware/fusion-middleware/weblogic-server/12.2.1.4/secmg/saml20.html#GUID-C541F7EB-1833-4500-8269-5ADB91E6BB6E</p>]]></content><author><name>DongHyun Kim</name></author><category term="WebLogic" /><category term="Middleware" /><category term="WebLogic" /><summary type="html"><![CDATA[1. Overview]]></summary></entry></feed>