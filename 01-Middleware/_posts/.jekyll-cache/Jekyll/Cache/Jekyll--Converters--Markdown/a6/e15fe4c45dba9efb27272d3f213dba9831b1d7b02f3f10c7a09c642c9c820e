I"d∏<h1 id="1-Í∞úÏöî">1. Í∞úÏöî</h1>

<p>WebLogic 12cR1 ÌÖåÏä§Ìä∏ ÌôòÍ≤ΩÏùÑ ÏûêÎèô Ïû¨Íµ¨Ï∂ïÏùÑ ÏúÑÌï¥ Î™®Îì† Í∏∞Î≥∏ ÏÑ§Ïπò ÌôòÍ≤ΩÏùÑ ÏßëÏïΩÌïúÎã§.</p>

<h1 id="2-ÏÑ§Î™Ö">2. ÏÑ§Î™Ö</h1>

<p>All-In-One-Script-For-12cR1.sh Ïã§ÌñâÏúºÎ°ú Îã§Ïùå ÌôòÍ≤ΩÏùÑ Íµ¨ÏÑ±ÌïòÎèÑÎ°ù ÌïúÎã§.</p>

<ul>
  <li>AdminServer (TCP 8001 , console account : weblogic, weblogic1)</li>
  <li>Managed M1 (TCP 8002)</li>
  <li>Managed M2 (TCP 8003)</li>
  <li>myCluster (M1, M2)</li>
  <li>/sw/app/testApp, cohSessonApp deployed on myCluster</li>
</ul>

<h1 id="3-script">3. Script</h1>

<h2 id="31-engine">3.1 Engine</h2>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">BASEDIR</span><span class="o">=</span>/sw/installFiles
<span class="nv">OS_USERNAME</span><span class="o">=</span><span class="si">$(</span><span class="nb">id</span> <span class="nt">--user</span> <span class="nt">--name</span><span class="si">)</span>
<span class="nv">OS_GROUPNAME</span><span class="o">=</span><span class="si">$(</span><span class="nb">id</span> <span class="nt">--group</span> <span class="nt">--name</span><span class="si">)</span>

<span class="nv">WLS_INSTALL_FILE</span><span class="o">=</span><span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span>/fmw_12.1.3.0.0_wls.jar
<span class="nv">JAVA_HOME</span><span class="o">=</span>/sw/jdk/jdk1.7.0_361

<span class="nv">WLS_INSTALL_PATH</span><span class="o">=</span>/sw/weblogic/12cR1
<span class="nv">INVENTORY_PATH</span><span class="o">=</span>/sw/weblogic/inventories/12cR1
<span class="nv">INVENTORY_GROUP</span><span class="o">=</span><span class="k">${</span><span class="nv">OS_GROUPNAME</span><span class="k">}</span>

<span class="nv">DOMAIN_NAME</span><span class="o">=</span>base_domain
<span class="nv">DOMAIN_HOME</span><span class="o">=</span><span class="k">${</span><span class="nv">WLS_INSTALL_PATH</span><span class="k">}</span>/domains/<span class="k">${</span><span class="nv">DOMAIN_NAME</span><span class="k">}</span>

<span class="nv">HOSTNAME</span><span class="o">=</span>wls.local
<span class="nv">ADM_ADDR</span><span class="o">=</span><span class="k">${</span><span class="nv">HOSTNAME</span><span class="k">}</span>
<span class="nv">ADM_PORT</span><span class="o">=</span>8001
<span class="nv">ADM_USERNAME</span><span class="o">=</span>weblogic
<span class="nv">ADM_PASSWORD</span><span class="o">=</span>weblogic1

<span class="nv">M1_SVR_NAME</span><span class="o">=</span>M1
<span class="nv">M1_SVR_PORT</span><span class="o">=</span>8002
<span class="nv">M2_SVR_NAME</span><span class="o">=</span>M2
<span class="nv">M2_SVR_PORT</span><span class="o">=</span>8003
<span class="nv">CLUSTER_NAME</span><span class="o">=</span>myCluster

<span class="nv">APP_HOME</span><span class="o">=</span>/sw/app
<span class="nv">APP_1</span><span class="o">=</span>testApp
<span class="nv">APP_2</span><span class="o">=</span>cohSessionApp


<span class="c"># (1) ResponseFile</span>
<span class="c"># https://docs.oracle.com/en/middleware/fusion-middleware/12.2.1.4/ouirf/sample-response-files-silent-installation-and-deinstallation.html#GUID-65B11C03-B559-41F1-B9B4-B7276491E580</span>

<span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh"> &gt; </span><span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span><span class="sh">/rsp
[ENGINE]
Response File Version=1.0.0.0.0
 
[GENERIC]
ORACLE_HOME=</span><span class="k">${</span><span class="nv">WLS_INSTALL_PATH</span><span class="k">}</span><span class="sh">
INSTALL_TYPE=WebLogic Server
DECLINE_SECURITY_UPDATES=true
SECURITY_UPATES_VIA_MYORACLESUPPORT=false
</span><span class="no">EOF


</span><span class="c"># (2) Inventory</span>
<span class="c"># https://docs.oracle.com/en/middleware/fusion-middleware/12.2.1.4/ouirf/using-oracle-universal-installer-silent-mode.html#GUID-756E3FD9-4094-412F-9BEB-72C5FD51056B</span>
<span class="c"># * inventory.loc ÌååÏùº ÏÉòÌîåÏùÄ Î¨∏ÏÑúÏóê ÏóÜÏùå</span>

<span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh"> &gt; </span><span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span><span class="sh">/loc
inventory_loc=</span><span class="k">${</span><span class="nv">INVENTORY_PATH</span><span class="k">}</span><span class="sh">
inst_group=</span><span class="k">${</span><span class="nv">INVENTORY_GROUP</span><span class="k">}</span><span class="sh">
</span><span class="no">EOF


</span><span class="c"># (3) Installation</span>
<span class="c"># https://docs.oracle.com/en/middleware/fusion-middleware/12.2.1.4/ouirf/using-oracle-universal-installer-silent-mode.html#GUID-5F06D02F-6D71-45B9-BF41-5D5759D31958</span>

<span class="k">${</span><span class="nv">JAVA_HOME</span><span class="k">}</span>/bin/java <span class="nt">-jar</span> <span class="k">${</span><span class="nv">WLS_INSTALL_FILE</span><span class="k">}</span> <span class="nt">-silent</span> <span class="nt">-responseFile</span> <span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span>/rsp <span class="nt">-invPtrLoc</span> <span class="k">${</span><span class="nv">BASEDIR</span><span class="k">}</span>/loc
</code></pre></div></div>

<h2 id="32-domain">3.2 Domain</h2>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># (4) Domain</span>
<span class="c"># https://docs.oracle.com/en/middleware/standalone/weblogic-server/14.1.1.0/wlstg/domains.html#GUID-5FC3AA22-BCB0-4F98-801A-8EBC5E05DC6A</span>

<span class="k">${</span><span class="nv">WLS_INSTALL_PATH</span><span class="k">}</span>/wlserver/common/bin/wlst.sh <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh">
readTemplate('</span><span class="k">${</span><span class="nv">WLS_INSTALL_PATH</span><span class="k">}</span><span class="sh">/wlserver/common/templates/wls/wls.jar')

# https://docs.oracle.com/middleware/1213/wls/WLSTC/reference.htm#WLSTC314
setOption('JavaHome', '</span><span class="k">${</span><span class="nv">JAVA_HOME</span><span class="k">}</span><span class="sh">');
setOption('ServerStartMode', 'prod')
setOption('OverwriteDomain', 'true')

cd('/')
cd('Security/base_domain/User/</span><span class="k">${</span><span class="nv">ADM_USERNAME</span><span class="k">}</span><span class="sh">')
cmo.setPassword('</span><span class="k">${</span><span class="nv">ADM_PASSWORD</span><span class="k">}</span><span class="sh">')

cd('Servers/AdminServer')
set('ListenAddress','</span><span class="k">${</span><span class="nv">ADM_ADDR</span><span class="k">}</span><span class="sh">')
set('ListenPort', </span><span class="k">${</span><span class="nv">ADM_PORT</span><span class="k">}</span><span class="sh">)

writeDomain('</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">')
closeTemplate()

exit()
</span><span class="no">EOF
</span></code></pre></div></div>

<h2 id="33-startup-adminserver">3.3 Startup AdminServer</h2>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># (5) Create boot.properties</span>
<span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh"> &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/boot.properties
username=</span><span class="k">${</span><span class="nv">ADM_USERNAME</span><span class="k">}</span><span class="sh">
password=</span><span class="k">${</span><span class="nv">ADM_PASSWORD</span><span class="k">}</span><span class="sh">
</span><span class="no">EOF


</span><span class="c"># (6) Start-up AdminServer</span>
<span class="c"># https://unix.stackexchange.com/questions/405250/passing-and-setting-variables-in-a-heredoc</span>

<span class="nv">DATE</span><span class="o">=</span><span class="si">$(</span><span class="nb">date</span> +%Y%m%d_%H%M%S<span class="si">)</span>
<span class="nv">tmpStdFile</span><span class="o">=</span>/tmp/AdminServer.<span class="k">${</span><span class="nv">DATE</span><span class="k">}</span>
<span class="nb">nohup</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/bin/startWebLogic.sh <span class="s2">"-Dweblogic.system.BootIdentityFile=</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="s2">/boot.properties"</span> <span class="o">&gt;</span> <span class="k">${</span><span class="nv">tmpStdFile</span><span class="k">}</span> 2&gt;&amp;1 &amp;

bash <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh">
while true
do
 R="</span><span class="se">\$</span><span class="sh">(grep "RUNNING mode" </span><span class="k">${</span><span class="nv">tmpStdFile</span><span class="k">}</span><span class="sh">)"
 if [ "x</span><span class="se">\$</span><span class="sh">{R}" == "x" ]; then
  sleep 3
  echo "Sleeping for 3 Seconds"
  else
  echo "AdminServer has Started"
  break;
 fi
done
</span><span class="no">EOF
</span></code></pre></div></div>

<h2 id="34-create-managed-server">3.4 Create Managed Server</h2>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># (7) Create Managed Servers</span>
<span class="c"># https://oracle-base.com/articles/web/wlst-create-managed-server</span>

<span class="nb">.</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/bin/setDomainEnv.sh
java weblogic.WLST <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh">
connect('</span><span class="k">${</span><span class="nv">ADM_USERNAME</span><span class="k">}</span><span class="sh">','</span><span class="k">${</span><span class="nv">ADM_PASSWORD</span><span class="k">}</span><span class="sh">','</span><span class="k">${</span><span class="nv">ADM_ADDR</span><span class="k">}</span><span class="sh">:</span><span class="k">${</span><span class="nv">ADM_PORT</span><span class="k">}</span><span class="sh">')
edit()
startEdit()

## Create Managed
cd('/')
cmo.createServer('</span><span class="k">${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span><span class="sh">')
cd('/Servers/</span><span class="k">${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span><span class="sh">')
cmo.setListenAddress('</span><span class="k">${</span><span class="nv">M1_SVR_ADDR</span><span class="k">}</span><span class="sh">')
cmo.setListenPort(</span><span class="k">${</span><span class="nv">M1_SVR_PORT</span><span class="k">}</span><span class="sh">)

cd('/Servers/</span><span class="k">${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span><span class="sh">/Log/</span><span class="k">${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span><span class="sh">')
cmo.setLogFileSeverity("Info")
cmo.setStdoutSeverity("Info")
cmo.setDomainLogBroadcastSeverity("Off")
cmo.setRotationType("byTime")

cd('/Servers/</span><span class="k">${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span><span class="sh">/WebServer/</span><span class="k">${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span><span class="sh">/WebServerLog/</span><span class="k">${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span><span class="sh">')
cmo.setNumberOfFilesLimited(True)
cmo.setRotationType("byTime")

cd('/')
cmo.createServer('</span><span class="k">${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span><span class="sh">')
cd('/Servers/</span><span class="k">${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span><span class="sh">')
cmo.setListenAddress('</span><span class="k">${</span><span class="nv">M2_SVR_ADDR</span><span class="k">}</span><span class="sh">')
cmo.setListenPort(</span><span class="k">${</span><span class="nv">M2_SVR_PORT</span><span class="k">}</span><span class="sh">)

cd('/Servers/</span><span class="k">${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span><span class="sh">/Log/</span><span class="k">${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span><span class="sh">')
cmo.setLogFileSeverity("Info")
cmo.setStdoutSeverity("Info")
cmo.setDomainLogBroadcastSeverity("Off")
cmo.setRotationType("byTime")

cd('/Servers/</span><span class="k">${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span><span class="sh">/WebServer/</span><span class="k">${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span><span class="sh">/WebServerLog/</span><span class="k">${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span><span class="sh">')
cmo.setNumberOfFilesLimited(True)
cmo.setRotationType("byTime")

save()
activate()
disconnect()
exit()
</span><span class="no">EOF
</span></code></pre></div></div>

<h2 id="35-cluster">3.5 Cluster</h2>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># (8) Assign Managed Server to Cluster</span>
<span class="c"># https://oracle-base.com/articles/web/wlst-create-managed-server</span>
<span class="c"># https://oracle-base.com/articles/web/wlst-create-cluster</span>

<span class="nb">.</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/bin/setDomainEnv.sh
java weblogic.WLST <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh">
connect('</span><span class="k">${</span><span class="nv">ADM_USERNAME</span><span class="k">}</span><span class="sh">','</span><span class="k">${</span><span class="nv">ADM_PASSWORD</span><span class="k">}</span><span class="sh">','</span><span class="k">${</span><span class="nv">ADM_ADDR</span><span class="k">}</span><span class="sh">:</span><span class="k">${</span><span class="nv">ADM_PORT</span><span class="k">}</span><span class="sh">')
edit()
startEdit()

## Create Cluster
cd('/')
cmo.createCluster('</span><span class="k">${</span><span class="nv">CLUSTER_NAME</span><span class="k">}</span><span class="sh">')
cd('/Clusters/</span><span class="k">${</span><span class="nv">CLUSTER_NAME</span><span class="k">}</span><span class="sh">')
cmo.setClusterMessagingMode('unicast')

## Assign Managed to Cluster
cd('/')
cd('/Servers/</span><span class="k">${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span><span class="sh">')
cmo.setCluster(getMBean('/Clusters/</span><span class="k">${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span><span class="sh">'))

cd('/')
cd('/Servers/</span><span class="k">${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span><span class="sh">')
cmo.setCluster(getMBean('/Clusters/</span><span class="k">${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span><span class="sh">'))

save()
activate()
disconnect()
exit()
</span><span class="no">EOF
</span></code></pre></div></div>

<h2 id="36-deploy-app">3.6 Deploy App</h2>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># (9) Deploy App</span>
<span class="c"># https://docs.oracle.com/middleware/1213/wls/WLSTC/reference.htm#WLSTC200</span>
<span class="nb">.</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/bin/setDomainEnv.sh
java weblogic.WLST <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh">
connect('</span><span class="k">${</span><span class="nv">ADM_USERNAME</span><span class="k">}</span><span class="sh">','</span><span class="k">${</span><span class="nv">ADM_PASSWORD</span><span class="k">}</span><span class="sh">','</span><span class="k">${</span><span class="nv">ADM_ADDR</span><span class="k">}</span><span class="sh">:</span><span class="k">${</span><span class="nv">ADM_PORT</span><span class="k">}</span><span class="sh">')
edit()
startEdit()

deploy(appName='</span><span class="k">${</span><span class="nv">APP_1</span><span class="k">}</span><span class="sh">', path='</span><span class="k">${</span><span class="nv">APP_HOME</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">APP_1</span><span class="k">}</span><span class="sh">', targets='</span><span class="k">${</span><span class="nv">CLUSTER_NAME</span><span class="k">}</span><span class="sh">', stageMode='nostage', block='true')
deploy(appName='</span><span class="k">${</span><span class="nv">APP_2</span><span class="k">}</span><span class="sh">', path='</span><span class="k">${</span><span class="nv">APP_HOME</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">APP_2</span><span class="k">}</span><span class="sh">', targets='</span><span class="k">${</span><span class="nv">CLUSTER_NAME</span><span class="k">}</span><span class="sh">', stageMode='nostage', block='true')
startApplication('</span><span class="k">${</span><span class="nv">APP_1</span><span class="k">}</span><span class="sh">')
startApplication('</span><span class="k">${</span><span class="nv">APP_2</span><span class="k">}</span><span class="sh">')

#stopApplication('</span><span class="k">${</span><span class="nv">APP_1</span><span class="k">}</span><span class="sh">')
#stopApplication('</span><span class="k">${</span><span class="nv">APP_2</span><span class="k">}</span><span class="sh">')
#undeploy(appName='</span><span class="k">${</span><span class="nv">APP_1</span><span class="k">}</span><span class="sh">')
#undeploy(appName='</span><span class="k">${</span><span class="nv">APP_2</span><span class="k">}</span><span class="sh">')

save()
activate()
disconnect()
exit()
</span><span class="no">EOF
</span></code></pre></div></div>

<h2 id="37-create-instances-scripts">3.7. Create Instances Scripts</h2>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># (10) Create Instance Scripts</span>
<span class="c"># AdminServer (start, stop, log, ps)</span>
<span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/startA.sh
#!/bin/sh
DOMAIN_NAME=#DOMAIN_NAME#
DOMAIN_HOME=#DOMAIN_HOME#
SERVER_NAME=#SERVER_NAME#
SERVER_PORT=#SERVER_PORT#
BOOT_PROPERTIES=</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/boot.properties

LOG_HOME=</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/logs
NOHUP_LOG=</span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">/nohup
GC_LOG=</span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">/gc
HEAPDUMP_DIR=</span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">/heapdump
LOG_TIME=</span><span class="si">$(</span><span class="nb">date</span> +%y%m%d_%H%M<span class="si">)</span><span class="sh">

##### Make Path #####
mkdir -p </span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh"> </span><span class="k">${</span><span class="nv">NOHUP_LOG</span><span class="k">}</span><span class="sh"> </span><span class="k">${</span><span class="nv">GC_LOG</span><span class="k">}</span><span class="sh"> </span><span class="k">${</span><span class="nv">HEAPDUMP_DIR</span><span class="k">}</span><span class="sh">
###################

##### User Check #####
USER=#OS_USERNAME#
if [ "</span><span class="nv">$USER</span><span class="sh">" != </span><span class="si">$(</span>/usr/bin/whoami<span class="si">)</span><span class="sh"> ]; then
     echo "* you do not have permission. *"
     exit;
fi
####################

## Process Check ##
WAS_PID=</span><span class="si">$(</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/psA.sh<span class="si">)</span><span class="sh">
if [ "</span><span class="nv">$WAS_PID</span><span class="sh">" != "" ]; then
     echo "Server already Started."
     exit;
fi
###################

##### gc log rotation #####
mv </span><span class="k">${</span><span class="nv">GC_LOG</span><span class="k">}</span><span class="sh">/gc_</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out </span><span class="k">${</span><span class="nv">GC_LOG</span><span class="k">}</span><span class="sh">/gc_</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out.</span><span class="k">${</span><span class="nv">LOG_TIME</span><span class="k">}</span><span class="sh">
USER_MEM_ARGS="</span><span class="k">${</span><span class="nv">USER_MEM_ARGS</span><span class="k">}</span><span class="sh"> -verbose:gc -Xloggc:</span><span class="k">${</span><span class="nv">GC_LOG</span><span class="k">}</span><span class="sh">/gc_</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out"
######################

##### Heap dump #####
USER_MEM_ARGS="</span><span class="k">${</span><span class="nv">USER_MEM_ARGS</span><span class="k">}</span><span class="sh"> -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=</span><span class="k">${</span><span class="nv">HEAPDUMP_DIR</span><span class="k">}</span><span class="sh">"
####################

JAVA_OPTIONS="</span><span class="k">${</span><span class="nv">JAVA_OPTIONS</span><span class="k">}</span><span class="sh"> -Dweblogic.system.BootIdentityFile=</span><span class="k">${</span><span class="nv">BOOT_PROPERTIES</span><span class="k">}</span><span class="sh">"
export JAVA_OPTIONS

USER_MEM_ARGS="</span><span class="k">${</span><span class="nv">USER_MEM_ARGS</span><span class="k">}</span><span class="sh"> -D</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">"
USER_MEM_ARGS="</span><span class="k">${</span><span class="nv">USER_MEM_ARGS</span><span class="k">}</span><span class="sh"> -Dserver.name=</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh"> -Dserver.port=</span><span class="k">${</span><span class="nv">SERVER_PORT</span><span class="k">}</span><span class="sh">"
USER_MEM_ARGS="</span><span class="k">${</span><span class="nv">USER_MEM_ARGS</span><span class="k">}</span><span class="sh"> -Xms1024m -Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=256m"
USER_MEM_ARGS="</span><span class="k">${</span><span class="nv">USER_MEM_ARGS</span><span class="k">}</span><span class="sh"> -Djava.net.preferIPv4Stack=true -Djava.net.preferIPv6Addresses=false -Dweblogic.wsee.skip.async.response=true"
USER_MEM_ARGS="</span><span class="k">${</span><span class="nv">USER_MEM_ARGS</span><span class="k">}</span><span class="sh"> -D_Offline_FileDataArchive=true -Dweblogic.connector.ConnectionPoolProfilingEnabled=false -Dcom.bea.wlw.netui.disableInstrumentation=true"
export USER_MEM_ARGS

mv </span><span class="k">${</span><span class="nv">NOHUP_LOG</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out </span><span class="k">${</span><span class="nv">NOHUP_LOG</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out.</span><span class="k">${</span><span class="nv">LOG_TIME</span><span class="k">}</span><span class="sh">
nohup </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/bin/startWebLogic.sh &gt; </span><span class="k">${</span><span class="nv">NOHUP_LOG</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out 2&gt;&amp;1 &amp;
#sleep 1
#tail -f </span><span class="k">${</span><span class="nv">NOHUP_LOG</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out
</span><span class="no">EOF


</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/stopA.sh
#!/bin/sh
DOMAIN_HOME=#DOMAIN_HOME#
SERVER_ADDR=#SERVER_ADDR#
SERVER_PORT=#SERVER_PORT#

. </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/bin/setDomainEnv.sh

##### User Check #####
USER=#OS_USERNAME#
if [ "</span><span class="nv">$USER</span><span class="sh">" != </span><span class="si">$(</span>/usr/bin/whoami<span class="si">)</span><span class="sh"> ]; then
     echo "* you do not have permission. *"
     exit;
fi
####################

## Process Check ##
WAS_PID=</span><span class="si">$(</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/psA.sh<span class="si">)</span><span class="sh">
if [ "</span><span class="nv">$WAS_PID</span><span class="sh">" == "" ]; then
     echo "Server already Stopped."
     exit;
fi
###################

java weblogic.WLST &lt;&lt; INNER_EOF
connect(url='</span><span class="k">${</span><span class="nv">SERVER_ADDR</span><span class="k">}</span><span class="sh">:</span><span class="k">${</span><span class="nv">SERVER_PORT</span><span class="k">}</span><span class="sh">')
shutdown(force='true')
exit()
INNER_EOF
</span><span class="no">EOF


</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/logA.sh
#!/bin/sh
DOMAIN_HOME=#DOMAIN_HOME#
SERVER_NAME=#SERVER_NAME#

LOG_HOME=</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/logs
NOHUP_LOG=</span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">/nohup
tail -10f </span><span class="k">${</span><span class="nv">NOHUP_LOG</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out
</span><span class="no">EOF


</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/psA.sh
#!/bin/sh
SERVER_NAME=#SERVER_NAME#
ps -ef | grep "java" | grep "weblogic.Server" | grep "D</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">"
</span><span class="no">EOF

</span><span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#OS_USERNAME#|</span><span class="k">${</span><span class="nv">OS_USERNAME</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*</span>A.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#DOMAIN_NAME#|</span><span class="k">${</span><span class="nv">DOMAIN_NAME</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*</span>A.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#DOMAIN_HOME#|</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*</span>A.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#SERVER_NAME#|AdminServer|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*</span>A.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#SERVER_ADDR#|</span><span class="k">${</span><span class="nv">ADM_ADDR</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*</span>A.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#SERVER_PORT#|</span><span class="k">${</span><span class="nv">ADM_PORT</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*</span>A.sh


<span class="c"># Managed Server (start, stop, log, ps)</span>
<span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/startM.sh
#!/bin/sh
DOMAIN_NAME=#DOMAIN_NAME#
DOMAIN_HOME=#DOMAIN_HOME#
SERVER_NAME=#SERVER_NAME#
SERVER_PORT=#SERVER_PORT#
ADM_URL="t3://#ADM_ADDR#:#ADM_PORT#"
BOOT_PROPERTIES=</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/boot.properties

LOG_HOME=</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/logs
NOHUP_LOG=</span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">/nohup
GC_LOG=</span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">/gc
HEAPDUMP_DIR=</span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">/heapdump
LOG_TIME=</span><span class="si">$(</span><span class="nb">date</span> +%y%m%d_%H%M<span class="si">)</span><span class="sh">

##### Make Path #####
mkdir -p </span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh"> </span><span class="k">${</span><span class="nv">NOHUP_LOG</span><span class="k">}</span><span class="sh"> </span><span class="k">${</span><span class="nv">GC_LOG</span><span class="k">}</span><span class="sh"> </span><span class="k">${</span><span class="nv">HEAPDUMP_DIR</span><span class="k">}</span><span class="sh">
###################

##### User Check #####
USER=#OS_USERNAME#
if [ "</span><span class="nv">$USER</span><span class="sh">" != </span><span class="si">$(</span>/usr/bin/whoami<span class="si">)</span><span class="sh"> ]; then
     echo "* you do not have permission. *"
     exit;
fi
####################

## Process Check ##
WAS_PID=</span><span class="si">$(</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/ps<span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span>.sh<span class="si">)</span><span class="sh">
if [ "</span><span class="nv">$WAS_PID</span><span class="sh">" != "" ]; then
     echo "Server already Started."
     exit;
fi
###################

##### gc log rotation #####
mv </span><span class="k">${</span><span class="nv">GC_LOG</span><span class="k">}</span><span class="sh">/gc_</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out </span><span class="k">${</span><span class="nv">GC_LOG</span><span class="k">}</span><span class="sh">/gc_</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out.</span><span class="k">${</span><span class="nv">LOG_TIME</span><span class="k">}</span><span class="sh">
USER_MEM_ARGS="</span><span class="k">${</span><span class="nv">USER_MEM_ARGS</span><span class="k">}</span><span class="sh"> -verbose:gc -Xloggc:</span><span class="k">${</span><span class="nv">GC_LOG</span><span class="k">}</span><span class="sh">/gc_</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out"
######################

##### Heap dump #####
USER_MEM_ARGS="</span><span class="k">${</span><span class="nv">USER_MEM_ARGS</span><span class="k">}</span><span class="sh"> -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=</span><span class="k">${</span><span class="nv">HEAPDUMP_DIR</span><span class="k">}</span><span class="sh">"
####################

JAVA_OPTIONS="</span><span class="k">${</span><span class="nv">JAVA_OPTIONS</span><span class="k">}</span><span class="sh"> -Dweblogic.system.BootIdentityFile=</span><span class="k">${</span><span class="nv">BOOT_PROPERTIES</span><span class="k">}</span><span class="sh">"
export JAVA_OPTIONS

USER_MEM_ARGS="</span><span class="k">${</span><span class="nv">USER_MEM_ARGS</span><span class="k">}</span><span class="sh"> -D</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">"
USER_MEM_ARGS="</span><span class="k">${</span><span class="nv">USER_MEM_ARGS</span><span class="k">}</span><span class="sh"> -Dserver.name=</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh"> -Dserver.port=</span><span class="k">${</span><span class="nv">SERVER_PORT</span><span class="k">}</span><span class="sh">"
USER_MEM_ARGS="</span><span class="k">${</span><span class="nv">USER_MEM_ARGS</span><span class="k">}</span><span class="sh"> -Xms1024m -Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=256m"
USER_MEM_ARGS="</span><span class="k">${</span><span class="nv">USER_MEM_ARGS</span><span class="k">}</span><span class="sh"> -Djava.net.preferIPv4Stack=true -Djava.net.preferIPv6Addresses=false -Dweblogic.wsee.skip.async.response=true"
USER_MEM_ARGS="</span><span class="k">${</span><span class="nv">USER_MEM_ARGS</span><span class="k">}</span><span class="sh"> -D_Offline_FileDataArchive=true -Dweblogic.connector.ConnectionPoolProfilingEnabled=false -Dcom.bea.wlw.netui.disableInstrumentation=true"
export USER_MEM_ARGS

mv </span><span class="k">${</span><span class="nv">NOHUP_LOG</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out </span><span class="k">${</span><span class="nv">NOHUP_LOG</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out.</span><span class="k">${</span><span class="nv">LOG_TIME</span><span class="k">}</span><span class="sh">
nohup </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/bin/startManagedWebLogic.sh </span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh"> </span><span class="k">${</span><span class="nv">ADM_URL</span><span class="k">}</span><span class="sh">&gt; </span><span class="k">${</span><span class="nv">NOHUP_LOG</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out 2&gt;&amp;1 &amp;
#sleep 1
#tail -f </span><span class="k">${</span><span class="nv">NOHUP_LOG</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out
</span><span class="no">EOF


</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/stopM.sh
#!/bin/sh
DOMAIN_HOME=#DOMAIN_HOME#
SERVER_NAME=#SERVER_NAME#
SERVER_ADDR=#SERVER_ADDR#
SERVER_PORT=#SERVER_PORT#

. </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/bin/setDomainEnv.sh

##### User Check #####
USER=#OS_USERNAME#
if [ "</span><span class="nv">$USER</span><span class="sh">" != </span><span class="si">$(</span>/usr/bin/whoami<span class="si">)</span><span class="sh"> ]; then
     echo "* you do not have permission. *"
     exit;
fi
####################

## Process Check ##
WAS_PID=</span><span class="si">$(</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/ps<span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span>.sh<span class="si">)</span><span class="sh">
if [ "</span><span class="nv">$WAS_PID</span><span class="sh">" == "" ]; then
     echo "Server already Stopped."
     exit;
fi
###################

java weblogic.WLST &lt;&lt; INNER_EOF
connect(url='</span><span class="k">${</span><span class="nv">SERVER_ADDR</span><span class="k">}</span><span class="sh">:</span><span class="k">${</span><span class="nv">SERVER_PORT</span><span class="k">}</span><span class="sh">')
shutdown(force='true')
exit()
INNER_EOF
</span><span class="no">EOF


</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/logM.sh
#!/bin/sh
DOMAIN_HOME=#DOMAIN_HOME#
SERVER_NAME=#SERVER_NAME#

LOG_HOME=</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/logs
NOHUP_LOG=</span><span class="k">${</span><span class="nv">LOG_HOME</span><span class="k">}</span><span class="sh">/nohup
tail -10f </span><span class="k">${</span><span class="nv">NOHUP_LOG</span><span class="k">}</span><span class="sh">/</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">.out
</span><span class="no">EOF


</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span> <span class="sh">"</span><span class="no">EOF</span><span class="sh">" &gt; </span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="sh">/psM.sh
#!/bin/sh
SERVER_NAME=#SERVER_NAME#
ps -ef | grep "java" | grep "weblogic.Server" | grep "D</span><span class="k">${</span><span class="nv">SERVER_NAME</span><span class="k">}</span><span class="sh">"
</span><span class="no">EOF


</span><span class="nb">cp</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/startM.sh <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/start<span class="k">${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">cp</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/stopM.sh <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/stop<span class="k">${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">cp</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/logM.sh <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/log<span class="k">${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">cp</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/psM.sh <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/ps<span class="k">${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span>.sh

<span class="nb">cp</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/startM.sh <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/start<span class="k">${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">cp</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/stopM.sh <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/stop<span class="k">${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">cp</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/logM.sh <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/log<span class="k">${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">cp</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/psM.sh <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/ps<span class="k">${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span>.sh

<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#OS_USERNAME#|</span><span class="k">${</span><span class="nv">OS_USERNAME</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#DOMAIN_NAME#|</span><span class="k">${</span><span class="nv">DOMAIN_NAME</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#DOMAIN_HOME#|</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#SERVER_NAME#|</span><span class="k">${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#SERVER_ADDR#|</span><span class="k">${</span><span class="nv">M1_SVR_ADDR</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#SERVER_PORT#|</span><span class="k">${</span><span class="nv">M1_SVR_PORT</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#ADM_ADDR#|</span><span class="k">${</span><span class="nv">ADM_ADDR</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#ADM_PORT#|</span><span class="k">${</span><span class="nv">ADM_PORT</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M1_SVR_NAME</span><span class="k">}</span>.sh

<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#OS_USERNAME#|</span><span class="k">${</span><span class="nv">OS_USERNAME</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#DOMAIN_NAME#|</span><span class="k">${</span><span class="nv">DOMAIN_NAME</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#DOMAIN_HOME#|</span><span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#SERVER_NAME#|</span><span class="k">${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#SERVER_ADDR#|</span><span class="k">${</span><span class="nv">M2_SVR_ADDR</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#SERVER_PORT#|</span><span class="k">${</span><span class="nv">M2_SVR_PORT</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#ADM_ADDR#|</span><span class="k">${</span><span class="nv">ADM_ADDR</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span>.sh
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|#ADM_PORT#|</span><span class="k">${</span><span class="nv">ADM_PORT</span><span class="k">}</span><span class="s2">|g"</span> <span class="k">${</span><span class="nv">DOMAIN_HOME</span><span class="k">}</span>/<span class="k">*${</span><span class="nv">M2_SVR_NAME</span><span class="k">}</span>.sh
</code></pre></div></div>
:ET